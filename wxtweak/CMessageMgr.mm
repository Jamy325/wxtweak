#line 1 "/Users/jamy/works/wxtweak/wxtweak/CMessageMgr.xm"
#include "wxUtil.h"

#if defined(__clang__)
#if __has_feature(objc_arc)
#define _LOGOS_SELF_TYPE_NORMAL __unsafe_unretained
#define _LOGOS_SELF_TYPE_INIT __attribute__((ns_consumed))
#define _LOGOS_SELF_CONST const
#define _LOGOS_RETURN_RETAINED __attribute__((ns_returns_retained))
#else
#define _LOGOS_SELF_TYPE_NORMAL
#define _LOGOS_SELF_TYPE_INIT
#define _LOGOS_SELF_CONST
#define _LOGOS_RETURN_RETAINED
#endif
#else
#define _LOGOS_SELF_TYPE_NORMAL
#define _LOGOS_SELF_TYPE_INIT
#define _LOGOS_SELF_CONST
#define _LOGOS_RETURN_RETAINED
#endif

#include <substrate.h>
@class CMessageMgr; 
static id (*_logos_meta_orig$_ungrouped$CMessageMgr$GetPathOfOpenUploadCDNFile)(_LOGOS_SELF_TYPE_NORMAL Class _LOGOS_SELF_CONST, SEL); static id _logos_meta_method$_ungrouped$CMessageMgr$GetPathOfOpenUploadCDNFile(_LOGOS_SELF_TYPE_NORMAL Class _LOGOS_SELF_CONST, SEL); static id (*_logos_meta_orig$_ungrouped$CMessageMgr$GetPathOfOpenUploadFile)(_LOGOS_SELF_TYPE_NORMAL Class _LOGOS_SELF_CONST, SEL); static id _logos_meta_method$_ungrouped$CMessageMgr$GetPathOfOpenUploadFile(_LOGOS_SELF_TYPE_NORMAL Class _LOGOS_SELF_CONST, SEL); static void (*_logos_orig$_ungrouped$CMessageMgr$onDownOpenMsgModMsg$MsgWrap$BitSet$)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, id, unsigned int); static void _logos_method$_ungrouped$CMessageMgr$onDownOpenMsgModMsg$MsgWrap$BitSet$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, id, unsigned int); static void (*_logos_orig$_ungrouped$CMessageMgr$onUploadImageCheckQQ)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL); static void _logos_method$_ungrouped$CMessageMgr$onUploadImageCheckQQ(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL); static void (*_logos_orig$_ungrouped$CMessageMgr$onUploadImageModMsg$MsgWrap$)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, id); static void _logos_method$_ungrouped$CMessageMgr$onUploadImageModMsg$MsgWrap$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, id); static void (*_logos_orig$_ungrouped$CMessageMgr$onUploadImageModMsgByBitSet$MsgWrap$BitSet$)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, id, unsigned int); static void _logos_method$_ungrouped$CMessageMgr$onUploadImageModMsgByBitSet$MsgWrap$BitSet$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, id, unsigned int); static void (*_logos_orig$_ungrouped$CMessageMgr$onModMsgByBitSet$MsgWrap$BitSet$)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, id, unsigned int); static void _logos_method$_ungrouped$CMessageMgr$onModMsgByBitSet$MsgWrap$BitSet$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, id, unsigned int); static id (*_logos_orig$_ungrouped$CMessageMgr$onGetMsg$LocalID$Wrap$)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, unsigned int, id); static id _logos_method$_ungrouped$CMessageMgr$onGetMsg$LocalID$Wrap$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, unsigned int, id); static void (*_logos_orig$_ungrouped$CMessageMgr$onGetBigImageErrorWithWrap$)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id); static void _logos_method$_ungrouped$CMessageMgr$onGetBigImageErrorWithWrap$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id); static void (*_logos_orig$_ungrouped$CMessageMgr$onGetBigImageResultWithWrap$image$imageData$isSaveImgOK$)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, id, id, _Bool *); static void _logos_method$_ungrouped$CMessageMgr$onGetBigImageResultWithWrap$image$imageData$isSaveImgOK$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, id, id, _Bool *); static void (*_logos_orig$_ungrouped$CMessageMgr$onUploadImageRequestWithWrap$)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id); static void _logos_method$_ungrouped$CMessageMgr$onUploadImageRequestWithWrap$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id); static void (*_logos_orig$_ungrouped$CMessageMgr$enterBackground)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL); static void _logos_method$_ungrouped$CMessageMgr$enterBackground(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL); static void (*_logos_orig$_ungrouped$CMessageMgr$enterForeground)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL); static void _logos_method$_ungrouped$CMessageMgr$enterForeground(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL); static void (*_logos_orig$_ungrouped$CMessageMgr$reSendAllMsgFromNotificationDone)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL); static void _logos_method$_ungrouped$CMessageMgr$reSendAllMsgFromNotificationDone(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL); static id (*_logos_orig$_ungrouped$CMessageMgr$getSentFailMsgs)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL); static id _logos_method$_ungrouped$CMessageMgr$getSentFailMsgs(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL); static void (*_logos_orig$_ungrouped$CMessageMgr$OnModMsg$MsgWrap$)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, id); static void _logos_method$_ungrouped$CMessageMgr$OnModMsg$MsgWrap$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, id); static void (*_logos_orig$_ungrouped$CMessageMgr$onAuthOK)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL); static void _logos_method$_ungrouped$CMessageMgr$onAuthOK(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL); static id (*_logos_orig$_ungrouped$CMessageMgr$getSemaphore)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL); static id _logos_method$_ungrouped$CMessageMgr$getSemaphore(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL); static _Bool (*_logos_orig$_ungrouped$CMessageMgr$IsRecordMsgDownloading$)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id); static _Bool _logos_method$_ungrouped$CMessageMgr$IsRecordMsgDownloading$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id); static void (*_logos_orig$_ungrouped$CMessageMgr$StopDownloadRecordMsg$)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id); static void _logos_method$_ungrouped$CMessageMgr$StopDownloadRecordMsg$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id); static void (*_logos_orig$_ungrouped$CMessageMgr$StartDownloadByRecordData$DataId$)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, id); static void _logos_method$_ungrouped$CMessageMgr$StartDownloadByRecordData$DataId$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, id); static void (*_logos_orig$_ungrouped$CMessageMgr$StartDownloadByRecordMsg$)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id); static void _logos_method$_ungrouped$CMessageMgr$StartDownloadByRecordMsg$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id); static void (*_logos_orig$_ungrouped$CMessageMgr$StopUploadRecordMsgByUsername$)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id); static void _logos_method$_ungrouped$CMessageMgr$StopUploadRecordMsgByUsername$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id); static void (*_logos_orig$_ungrouped$CMessageMgr$StopUploadRecordMsg$)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id); static void _logos_method$_ungrouped$CMessageMgr$StopUploadRecordMsg$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id); static void (*_logos_orig$_ungrouped$CMessageMgr$ResendRecordMsg$MsgWrap$)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, id); static void _logos_method$_ungrouped$CMessageMgr$ResendRecordMsg$MsgWrap$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, id); static void (*_logos_orig$_ungrouped$CMessageMgr$AddRecordMsg$MsgWrap$)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, id); static void _logos_method$_ungrouped$CMessageMgr$AddRecordMsg$MsgWrap$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, id); static void (*_logos_orig$_ungrouped$CMessageMgr$StartDownloadAppAttach$MsgWrap$AttachId$AttachDataSize$AttachFileExt$)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, id, id, unsigned int, id); static void _logos_method$_ungrouped$CMessageMgr$StartDownloadAppAttach$MsgWrap$AttachId$AttachDataSize$AttachFileExt$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, id, id, unsigned int, id); static _Bool (*_logos_orig$_ungrouped$CMessageMgr$InAppAttachDownloading$MsgWrap$)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, id); static _Bool _logos_method$_ungrouped$CMessageMgr$InAppAttachDownloading$MsgWrap$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, id); static _Bool (*_logos_orig$_ungrouped$CMessageMgr$InAppAttachDownloading$MsgWrap$AttachId$)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, id, id); static _Bool _logos_method$_ungrouped$CMessageMgr$InAppAttachDownloading$MsgWrap$AttachId$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, id, id); static _Bool (*_logos_orig$_ungrouped$CMessageMgr$RollbackTransaction)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL); static _Bool _logos_method$_ungrouped$CMessageMgr$RollbackTransaction(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL); static _Bool (*_logos_orig$_ungrouped$CMessageMgr$CommitTransaction)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL); static _Bool _logos_method$_ungrouped$CMessageMgr$CommitTransaction(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL); static _Bool (*_logos_orig$_ungrouped$CMessageMgr$BeginTransaction)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL); static _Bool _logos_method$_ungrouped$CMessageMgr$BeginTransaction(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL); static id (*_logos_orig$_ungrouped$CMessageMgr$DBContext)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL); static id _logos_method$_ungrouped$CMessageMgr$DBContext(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL); static void (*_logos_orig$_ungrouped$CMessageMgr$onDiskStorageWarningCleanedSize$)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, unsigned int *); static void _logos_method$_ungrouped$CMessageMgr$onDiskStorageWarningCleanedSize$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, unsigned int *); static void (*_logos_orig$_ungrouped$CMessageMgr$addAutoCleanTask)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL); static void _logos_method$_ungrouped$CMessageMgr$addAutoCleanTask(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL); static unsigned int (*_logos_orig$_ungrouped$CMessageMgr$GetDownloadThumbStatus$)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id); static unsigned int _logos_method$_ungrouped$CMessageMgr$GetDownloadThumbStatus$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id); static _Bool (*_logos_orig$_ungrouped$CMessageMgr$StartDownloadThumb$)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id); static _Bool _logos_method$_ungrouped$CMessageMgr$StartDownloadThumb$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id); static unsigned int (*_logos_orig$_ungrouped$CMessageMgr$GetUploadPercent$)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id); static unsigned int _logos_method$_ungrouped$CMessageMgr$GetUploadPercent$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id); static unsigned int (*_logos_orig$_ungrouped$CMessageMgr$GetDownloadImageTotalLen$)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id); static unsigned int _logos_method$_ungrouped$CMessageMgr$GetDownloadImageTotalLen$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id); static unsigned int (*_logos_orig$_ungrouped$CMessageMgr$GetDownloadImagePartLen$)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id); static unsigned int _logos_method$_ungrouped$CMessageMgr$GetDownloadImagePartLen$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id); static void (*_logos_orig$_ungrouped$CMessageMgr$StopDownloadImage$)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id); static void _logos_method$_ungrouped$CMessageMgr$StopDownloadImage$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id); static void (*_logos_orig$_ungrouped$CMessageMgr$StartDownloadImage$HD$)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, _Bool); static void _logos_method$_ungrouped$CMessageMgr$StartDownloadImage$HD$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, _Bool); static unsigned int (*_logos_orig$_ungrouped$CMessageMgr$GetImgOrVideoMsgCount$)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id); static unsigned int _logos_method$_ungrouped$CMessageMgr$GetImgOrVideoMsgCount$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id); static unsigned int (*_logos_orig$_ungrouped$CMessageMgr$GetImgOrVideoMsgCount$FromID$CreateTime$)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, unsigned int, unsigned int); static unsigned int _logos_method$_ungrouped$CMessageMgr$GetImgOrVideoMsgCount$FromID$CreateTime$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, unsigned int, unsigned int); static id (*_logos_orig$_ungrouped$CMessageMgr$GetImgOrVideoNextMsg$FromID$CreateTime$)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, unsigned int, unsigned int); static id _logos_method$_ungrouped$CMessageMgr$GetImgOrVideoNextMsg$FromID$CreateTime$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, unsigned int, unsigned int); static id (*_logos_orig$_ungrouped$CMessageMgr$GetImgOrVideoLastMsg$)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id); static id _logos_method$_ungrouped$CMessageMgr$GetImgOrVideoLastMsg$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id); static id (*_logos_orig$_ungrouped$CMessageMgr$GetImgOrVideoLastMsg$FromID$CreateTime$)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, unsigned int, unsigned int); static id _logos_method$_ungrouped$CMessageMgr$GetImgOrVideoLastMsg$FromID$CreateTime$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, unsigned int, unsigned int); static id (*_logos_orig$_ungrouped$CMessageMgr$GetImgAndVideoMsgList$)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id); static id _logos_method$_ungrouped$CMessageMgr$GetImgAndVideoMsgList$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id); static id (*_logos_orig$_ungrouped$CMessageMgr$GetImgMsgList$)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id); static id _logos_method$_ungrouped$CMessageMgr$GetImgMsgList$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id); static unsigned int (*_logos_orig$_ungrouped$CMessageMgr$GetImgMsgCount$)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id); static unsigned int _logos_method$_ungrouped$CMessageMgr$GetImgMsgCount$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id); static unsigned int (*_logos_orig$_ungrouped$CMessageMgr$GetImgMsgCount$FromID$CreateTime$)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, unsigned int, unsigned int); static unsigned int _logos_method$_ungrouped$CMessageMgr$GetImgMsgCount$FromID$CreateTime$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, unsigned int, unsigned int); static id (*_logos_orig$_ungrouped$CMessageMgr$GetImgLastMsg$)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id); static id _logos_method$_ungrouped$CMessageMgr$GetImgLastMsg$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id); static id (*_logos_orig$_ungrouped$CMessageMgr$GetImgLastMsg$FromID$CreateTime$)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, unsigned int, unsigned int); static id _logos_method$_ungrouped$CMessageMgr$GetImgLastMsg$FromID$CreateTime$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, unsigned int, unsigned int); static id (*_logos_orig$_ungrouped$CMessageMgr$GetImgNextMsg$FromID$CreateTime$)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, unsigned int, unsigned int); static id _logos_method$_ungrouped$CMessageMgr$GetImgNextMsg$FromID$CreateTime$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, unsigned int, unsigned int); static void (*_logos_orig$_ungrouped$CMessageMgr$onServiceClearData)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL); static void _logos_method$_ungrouped$CMessageMgr$onServiceClearData(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL); static _Bool (*_logos_orig$_ungrouped$CMessageMgr$onServiceMemoryWarning)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL); static _Bool _logos_method$_ungrouped$CMessageMgr$onServiceMemoryWarning(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL); static void (*_logos_orig$_ungrouped$CMessageMgr$onServiceInit)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL); static void _logos_method$_ungrouped$CMessageMgr$onServiceInit(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL); static void (*_logos_orig$_ungrouped$CMessageMgr$CheckQQPwd)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL); static void _logos_method$_ungrouped$CMessageMgr$CheckQQPwd(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL); static void (*_logos_orig$_ungrouped$CMessageMgr$UpdateVideoMsg$)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id); static void _logos_method$_ungrouped$CMessageMgr$UpdateVideoMsg$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id); static void (*_logos_orig$_ungrouped$CMessageMgr$OnErrorByReceiver$ErrNo$)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, int); static void _logos_method$_ungrouped$CMessageMgr$OnErrorByReceiver$ErrNo$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, int); static void (*_logos_orig$_ungrouped$CMessageMgr$OnErrorBySender$ErrNo$)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, int); static void _logos_method$_ungrouped$CMessageMgr$OnErrorBySender$ErrNo$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, int); static void (*_logos_orig$_ungrouped$CMessageMgr$OnMessageSentBySender$)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id); static void _logos_method$_ungrouped$CMessageMgr$OnMessageSentBySender$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id); static void (*_logos_orig$_ungrouped$CMessageMgr$OnAddMessageByReceiver$)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id); static void _logos_method$_ungrouped$CMessageMgr$OnAddMessageByReceiver$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id); static void (*_logos_orig$_ungrouped$CMessageMgr$OnAddMessageBySender$)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id); static void _logos_method$_ungrouped$CMessageMgr$OnAddMessageBySender$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id); static void (*_logos_orig$_ungrouped$CMessageMgr$MessageReturn$MessageInfo$Event$)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, unsigned int, id, unsigned int); static void _logos_method$_ungrouped$CMessageMgr$MessageReturn$MessageInfo$Event$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, unsigned int, id, unsigned int); static void (*_logos_orig$_ungrouped$CMessageMgr$MessageReturn$Event$)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, unsigned int); static void _logos_method$_ungrouped$CMessageMgr$MessageReturn$Event$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, unsigned int); static void (*_logos_orig$_ungrouped$CMessageMgr$HandleSvrCmd$MsgWrap$)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, id); static void _logos_method$_ungrouped$CMessageMgr$HandleSvrCmd$MsgWrap$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, id); static void (*_logos_orig$_ungrouped$CMessageMgr$DelMsgPatten$MsgWrap$)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, id); static void _logos_method$_ungrouped$CMessageMgr$DelMsgPatten$MsgWrap$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, id); static id (*_logos_orig$_ungrouped$CMessageMgr$GetLastMsgToUsr$)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id); static id _logos_method$_ungrouped$CMessageMgr$GetLastMsgToUsr$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id); static id (*_logos_orig$_ungrouped$CMessageMgr$GetLastMsgFromUsr$)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id); static id _logos_method$_ungrouped$CMessageMgr$GetLastMsgFromUsr$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id); static void (*_logos_orig$_ungrouped$CMessageMgr$ModVoipMsgStatus$MsgWrap$)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, id); static void _logos_method$_ungrouped$CMessageMgr$ModVoipMsgStatus$MsgWrap$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, id); static void (*_logos_orig$_ungrouped$CMessageMgr$CheckQueue)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL); static void _logos_method$_ungrouped$CMessageMgr$CheckQueue(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL); static id (*_logos_orig$_ungrouped$CMessageMgr$GetRealChatName$)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id); static id _logos_method$_ungrouped$CMessageMgr$GetRealChatName$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id); static void (*_logos_orig$_ungrouped$CMessageMgr$StopDownloadAppAttach$MsgWrap$)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, id); static void _logos_method$_ungrouped$CMessageMgr$StopDownloadAppAttach$MsgWrap$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, id); static void (*_logos_orig$_ungrouped$CMessageMgr$StartDownloadAppAttach$MsgWrap$)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, id); static void _logos_method$_ungrouped$CMessageMgr$StartDownloadAppAttach$MsgWrap$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, id); static void (*_logos_orig$_ungrouped$CMessageMgr$AddAppMsg$MsgWrap$Data$Scene$)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, id, id, unsigned int); static void _logos_method$_ungrouped$CMessageMgr$AddAppMsg$MsgWrap$Data$Scene$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, id, id, unsigned int); static void (*_logos_orig$_ungrouped$CMessageMgr$StartUploadAppMsg$MsgWrap$Scene$)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, id, unsigned int); static void _logos_method$_ungrouped$CMessageMgr$StartUploadAppMsg$MsgWrap$Scene$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, id, unsigned int); static void (*_logos_orig$_ungrouped$CMessageMgr$SetGetLocationEnd$MsgWrap$)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, id); static void _logos_method$_ungrouped$CMessageMgr$SetGetLocationEnd$MsgWrap$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, id); static void (*_logos_orig$_ungrouped$CMessageMgr$UpdateEmoticonMsg$)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id); static void _logos_method$_ungrouped$CMessageMgr$UpdateEmoticonMsg$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id); static void (*_logos_orig$_ungrouped$CMessageMgr$SetEmoticonGameEnd$MsgWrap$)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, id); static void _logos_method$_ungrouped$CMessageMgr$SetEmoticonGameEnd$MsgWrap$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, id); static void (*_logos_orig$_ungrouped$CMessageMgr$StartDownloadEmoticon$MsgWrap$)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, id); static void _logos_method$_ungrouped$CMessageMgr$StartDownloadEmoticon$MsgWrap$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, id); static void (*_logos_orig$_ungrouped$CMessageMgr$AddEmoticonMsg$MsgWrap$)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, id); static void _logos_method$_ungrouped$CMessageMgr$AddEmoticonMsg$MsgWrap$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, id); static _Bool (*_logos_orig$_ungrouped$CMessageMgr$AddBackupMsg$MsgWrap$)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, id); static _Bool _logos_method$_ungrouped$CMessageMgr$AddBackupMsg$MsgWrap$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, id); static _Bool (*_logos_orig$_ungrouped$CMessageMgr$backupMsgSrvIDExit$MsgWrap$)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, id); static _Bool _logos_method$_ungrouped$CMessageMgr$backupMsgSrvIDExit$MsgWrap$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, id); static id (*_logos_orig$_ungrouped$CMessageMgr$backupGetMsg$n64SvrID$)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, long long); static id _logos_method$_ungrouped$CMessageMgr$backupGetMsg$n64SvrID$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, long long); static void (*_logos_orig$_ungrouped$CMessageMgr$AddLocalMsg$MsgWrap$fixTime$NewMsgArriveNotify$)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, id, _Bool, _Bool); static void _logos_method$_ungrouped$CMessageMgr$AddLocalMsg$MsgWrap$fixTime$NewMsgArriveNotify$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, id, _Bool, _Bool); static void (*_logos_orig$_ungrouped$CMessageMgr$AddLocalMsg$MsgWrap$fixTime$NewMsgArriveNotify$Unique$)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, id, _Bool, _Bool, _Bool); static void _logos_method$_ungrouped$CMessageMgr$AddLocalMsg$MsgWrap$fixTime$NewMsgArriveNotify$Unique$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, id, _Bool, _Bool, _Bool); static void (*_logos_orig$_ungrouped$CMessageMgr$AddLocalMsg$MsgWrap$)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, id); static void _logos_method$_ungrouped$CMessageMgr$AddLocalMsg$MsgWrap$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, id); static void (*_logos_orig$_ungrouped$CMessageMgr$AddUniqueLocalMsg$MsgWrap$)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, id); static void _logos_method$_ungrouped$CMessageMgr$AddUniqueLocalMsg$MsgWrap$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, id); static void (*_logos_orig$_ungrouped$CMessageMgr$AddPimMsg$MsgWrap$)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, id); static void _logos_method$_ungrouped$CMessageMgr$AddPimMsg$MsgWrap$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, id); static void (*_logos_orig$_ungrouped$CMessageMgr$DropChatTable$)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id); static void _logos_method$_ungrouped$CMessageMgr$DropChatTable$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id); static void (*_logos_orig$_ungrouped$CMessageMgr$AddFloatBottle$MsgWrap$)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, id); static void _logos_method$_ungrouped$CMessageMgr$AddFloatBottle$MsgWrap$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, id); static void (*_logos_orig$_ungrouped$CMessageMgr$StopDownloadVideoByChatName$)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id); static void _logos_method$_ungrouped$CMessageMgr$StopDownloadVideoByChatName$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id); static void (*_logos_orig$_ungrouped$CMessageMgr$StopDownloadVideo$MsgWrap$)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, id); static void _logos_method$_ungrouped$CMessageMgr$StopDownloadVideo$MsgWrap$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, id); static void (*_logos_orig$_ungrouped$CMessageMgr$StartDownloadVideo$MsgWrap$)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, id); static void _logos_method$_ungrouped$CMessageMgr$StartDownloadVideo$MsgWrap$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, id); static _Bool (*_logos_orig$_ungrouped$CMessageMgr$InternalStartDownloadShortVideo$)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id); static _Bool _logos_method$_ungrouped$CMessageMgr$InternalStartDownloadShortVideo$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id); static void (*_logos_orig$_ungrouped$CMessageMgr$StartDownloadShortVideo$)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id); static void _logos_method$_ungrouped$CMessageMgr$StartDownloadShortVideo$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id); static void (*_logos_orig$_ungrouped$CMessageMgr$StopUploadVideoByChatName$)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id); static void _logos_method$_ungrouped$CMessageMgr$StopUploadVideoByChatName$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id); static void (*_logos_orig$_ungrouped$CMessageMgr$StopUploadVideo$MsgWrap$)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, id); static void _logos_method$_ungrouped$CMessageMgr$StopUploadVideo$MsgWrap$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, id); static void (*_logos_orig$_ungrouped$CMessageMgr$StartUploadVideo$MsgWrap$)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, id); static void _logos_method$_ungrouped$CMessageMgr$StartUploadVideo$MsgWrap$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, id); static void (*_logos_orig$_ungrouped$CMessageMgr$AddShortVideoLocalMsg$ToUsr$VideoInfo$MsgType$)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, id, id, unsigned int); static void _logos_method$_ungrouped$CMessageMgr$AddShortVideoLocalMsg$ToUsr$VideoInfo$MsgType$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, id, id, unsigned int); static void (*_logos_orig$_ungrouped$CMessageMgr$AddVideoMsg$ToUsr$VideoInfo$MsgType$)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, id, id, unsigned int); static void _logos_method$_ungrouped$CMessageMgr$AddVideoMsg$ToUsr$VideoInfo$MsgType$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, id, id, unsigned int); static void (*_logos_orig$_ungrouped$CMessageMgr$ResendSightMsg$MsgWrap$)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, id); static void _logos_method$_ungrouped$CMessageMgr$ResendSightMsg$MsgWrap$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, id); static void (*_logos_orig$_ungrouped$CMessageMgr$AddShortVideoMsg$ToUsr$VideoInfo$)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, id, id); static void _logos_method$_ungrouped$CMessageMgr$AddShortVideoMsg$ToUsr$VideoInfo$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, id, id); static void (*_logos_orig$_ungrouped$CMessageMgr$AddVideoMsg$ToUsr$VideoInfo$)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, id, id); static void _logos_method$_ungrouped$CMessageMgr$AddVideoMsg$ToUsr$VideoInfo$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, id, id); static void (*_logos_orig$_ungrouped$CMessageMgr$UpdateMessage$MsgWrap$)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, id); static void _logos_method$_ungrouped$CMessageMgr$UpdateMessage$MsgWrap$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, id); static void (*_logos_orig$_ungrouped$CMessageMgr$UpdateVoiceMessage$MsgWrap$)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, id); static void _logos_method$_ungrouped$CMessageMgr$UpdateVoiceMessage$MsgWrap$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, id); static void (*_logos_orig$_ungrouped$CMessageMgr$UpdateVoiceStatus$LocalID$DownloadStatus$)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, unsigned int, unsigned int); static void _logos_method$_ungrouped$CMessageMgr$UpdateVoiceStatus$LocalID$DownloadStatus$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, unsigned int, unsigned int); static unsigned int (*_logos_orig$_ungrouped$CMessageMgr$GetMesCount$MesType$)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, unsigned int); static unsigned int _logos_method$_ungrouped$CMessageMgr$GetMesCount$MesType$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, unsigned int); static unsigned int (*_logos_orig$_ungrouped$CMessageMgr$GetAllMesCount$)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id); static unsigned int _logos_method$_ungrouped$CMessageMgr$GetAllMesCount$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id); static unsigned int (*_logos_orig$_ungrouped$CMessageMgr$GetUnReadCountInHello$)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id); static unsigned int _logos_method$_ungrouped$CMessageMgr$GetUnReadCountInHello$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id); static unsigned int (*_logos_orig$_ungrouped$CMessageMgr$GetCountInHello$)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id); static unsigned int _logos_method$_ungrouped$CMessageMgr$GetCountInHello$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id); static unsigned int (*_logos_orig$_ungrouped$CMessageMgr$GetUnReadCount$)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id); static unsigned int _logos_method$_ungrouped$CMessageMgr$GetUnReadCount$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id); static void (*_logos_orig$_ungrouped$CMessageMgr$DelMsg$MsgWrap$)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, id); static void _logos_method$_ungrouped$CMessageMgr$DelMsg$MsgWrap$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, id); static void (*_logos_orig$_ungrouped$CMessageMgr$DelMsg$MsgList$DelAll$)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, id, _Bool); static void _logos_method$_ungrouped$CMessageMgr$DelMsg$MsgList$DelAll$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, id, _Bool); static void (*_logos_orig$_ungrouped$CMessageMgr$ClearUnreadForSync$CreateTime$)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, unsigned int); static void _logos_method$_ungrouped$CMessageMgr$ClearUnreadForSync$CreateTime$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, unsigned int); static void (*_logos_orig$_ungrouped$CMessageMgr$ClearUnRead$FromID$ToID$)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, unsigned int, unsigned int); static void _logos_method$_ungrouped$CMessageMgr$ClearUnRead$FromID$ToID$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, unsigned int, unsigned int); static unsigned int (*_logos_orig$_ungrouped$CMessageMgr$GetSayHelloStatus$LocalID$)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, unsigned int); static unsigned int _logos_method$_ungrouped$CMessageMgr$GetSayHelloStatus$LocalID$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, unsigned int); static _Bool (*_logos_orig$_ungrouped$CMessageMgr$SetSayHelloStatus$LocalID$Status$)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, unsigned int, unsigned int); static _Bool _logos_method$_ungrouped$CMessageMgr$SetSayHelloStatus$LocalID$Status$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, unsigned int, unsigned int); static void (*_logos_orig$_ungrouped$CMessageMgr$AddHelloMsgList$MsgList$)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, id); static void _logos_method$_ungrouped$CMessageMgr$AddHelloMsgList$MsgList$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, id); static void (*_logos_orig$_ungrouped$CMessageMgr$AddHelloMsg$MsgWrap$HelloUser$OpCode$DES$checkCreateTime$status$)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, id, id, unsigned int, unsigned int, _Bool, unsigned int); static void _logos_method$_ungrouped$CMessageMgr$AddHelloMsg$MsgWrap$HelloUser$OpCode$DES$checkCreateTime$status$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, id, id, unsigned int, unsigned int, _Bool, unsigned int); static _Bool (*_logos_orig$_ungrouped$CMessageMgr$ClearHelloUnRead$HelloUser$)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, id); static _Bool _logos_method$_ungrouped$CMessageMgr$ClearHelloUnRead$HelloUser$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, id); static void (*_logos_orig$_ungrouped$CMessageMgr$DelHelloMsg$HelloUser$)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, id); static void _logos_method$_ungrouped$CMessageMgr$DelHelloMsg$HelloUser$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, id); static id (*_logos_orig$_ungrouped$CMessageMgr$GetHelloMsg$HelloUser$Limit$OnlyTo$)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, id, unsigned int, _Bool); static id _logos_method$_ungrouped$CMessageMgr$GetHelloMsg$HelloUser$Limit$OnlyTo$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, id, unsigned int, _Bool); static id (*_logos_orig$_ungrouped$CMessageMgr$GetHelloUsers$Limit$OnlyUnread$)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, unsigned int, _Bool); static id _logos_method$_ungrouped$CMessageMgr$GetHelloUsers$Limit$OnlyUnread$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, unsigned int, _Bool); static void (*_logos_orig$_ungrouped$CMessageMgr$CheckMessageStatus$Msg$)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, id); static void _logos_method$_ungrouped$CMessageMgr$CheckMessageStatus$Msg$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, id); static id (*_logos_orig$_ungrouped$CMessageMgr$GetFirstUnreadMsg$)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id); static id _logos_method$_ungrouped$CMessageMgr$GetFirstUnreadMsg$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id); static id (*_logos_orig$_ungrouped$CMessageMgr$GetLastMsg$)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id); static id _logos_method$_ungrouped$CMessageMgr$GetLastMsg$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id); static unsigned int (*_logos_orig$_ungrouped$CMessageMgr$GetTextMsgCount$FromID$ToID$)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, unsigned int, unsigned int); static unsigned int _logos_method$_ungrouped$CMessageMgr$GetTextMsgCount$FromID$ToID$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, unsigned int, unsigned int); static id (*_logos_orig$_ungrouped$CMessageMgr$GetTextMsg$FromID$ToID$)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, unsigned int, unsigned int); static id _logos_method$_ungrouped$CMessageMgr$GetTextMsg$FromID$ToID$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, unsigned int, unsigned int); static id (*_logos_orig$_ungrouped$CMessageMgr$GetTextMsg$FromID$Limit$LeftCount$LeftUnreadCount$)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, unsigned int, unsigned int, unsigned int *, unsigned int *); static id _logos_method$_ungrouped$CMessageMgr$GetTextMsg$FromID$Limit$LeftCount$LeftUnreadCount$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, unsigned int, unsigned int, unsigned int *, unsigned int *); static id (*_logos_orig$_ungrouped$CMessageMgr$GetMsg$BizMsgClientID$)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, id); static id _logos_method$_ungrouped$CMessageMgr$GetMsg$BizMsgClientID$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, id); static id (*_logos_orig$_ungrouped$CMessageMgr$GetMsg$n64SvrID$)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, long long); static id _logos_method$_ungrouped$CMessageMgr$GetMsg$n64SvrID$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, long long); static id (*_logos_orig$_ungrouped$CMessageMgr$GetMsg$LocalID$)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, unsigned int); static id _logos_method$_ungrouped$CMessageMgr$GetMsg$LocalID$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, unsigned int); static id (*_logos_orig$_ungrouped$CMessageMgr$QueryMsgFromChat$queryText$FromID$FromCreateTime$Limit$LeftCount$)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, id, unsigned int, unsigned int, unsigned int, unsigned int *); static id _logos_method$_ungrouped$CMessageMgr$QueryMsgFromChat$queryText$FromID$FromCreateTime$Limit$LeftCount$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, id, unsigned int, unsigned int, unsigned int, unsigned int *); static id (*_logos_orig$_ungrouped$CMessageMgr$GetDownMsgByCreateTime$FromID$FromCreateTime$Limit$LeftCount$)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, unsigned int, unsigned int, unsigned int, unsigned int *); static id _logos_method$_ungrouped$CMessageMgr$GetDownMsgByCreateTime$FromID$FromCreateTime$Limit$LeftCount$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, unsigned int, unsigned int, unsigned int, unsigned int *); static id (*_logos_orig$_ungrouped$CMessageMgr$GetMsgByCreateTime$FromID$FromCreateTime$Limit$LeftCount$)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, unsigned int, unsigned int, unsigned int, unsigned int *); static id _logos_method$_ungrouped$CMessageMgr$GetMsgByCreateTime$FromID$FromCreateTime$Limit$LeftCount$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, unsigned int, unsigned int, unsigned int, unsigned int *); static id (*_logos_orig$_ungrouped$CMessageMgr$GetDownMsg$FromID$Limit$LeftCount$LeftUnreadCount$)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, unsigned int, unsigned int, unsigned int *, unsigned int *); static id _logos_method$_ungrouped$CMessageMgr$GetDownMsg$FromID$Limit$LeftCount$LeftUnreadCount$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, unsigned int, unsigned int, unsigned int *, unsigned int *); static id (*_logos_orig$_ungrouped$CMessageMgr$GetMsg$FromID$Limit$LeftCount$LeftUnreadCount$)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, unsigned int, unsigned int, unsigned int *, unsigned int *); static id _logos_method$_ungrouped$CMessageMgr$GetMsg$FromID$Limit$LeftCount$LeftUnreadCount$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, unsigned int, unsigned int, unsigned int *, unsigned int *); static void (*_logos_orig$_ungrouped$CMessageMgr$AddMsgPattern$)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id); static void _logos_method$_ungrouped$CMessageMgr$AddMsgPattern$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id); static void (*_logos_orig$_ungrouped$CMessageMgr$HandleMsgList$MsgList$)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, id); static void _logos_method$_ungrouped$CMessageMgr$HandleMsgList$MsgList$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, id); static void (*_logos_orig$_ungrouped$CMessageMgr$ResendMsg$MsgWrap$)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, id); static void _logos_method$_ungrouped$CMessageMgr$ResendMsg$MsgWrap$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, id); static void (*_logos_orig$_ungrouped$CMessageMgr$ModMsgByBitSet$MsgWrap$BitSet$)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, id, unsigned int); static void _logos_method$_ungrouped$CMessageMgr$ModMsgByBitSet$MsgWrap$BitSet$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, id, unsigned int); static void (*_logos_orig$_ungrouped$CMessageMgr$ModMsgWithoutNotify$MsgWrap$)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, id); static void _logos_method$_ungrouped$CMessageMgr$ModMsgWithoutNotify$MsgWrap$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, id); static void (*_logos_orig$_ungrouped$CMessageMgr$ModMsg$MsgWrap$)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, id); static void _logos_method$_ungrouped$CMessageMgr$ModMsg$MsgWrap$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, id); static void (*_logos_orig$_ungrouped$CMessageMgr$AddMsg$MsgWrap$)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, id); static void _logos_method$_ungrouped$CMessageMgr$AddMsg$MsgWrap$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, id); static void (*_logos_orig$_ungrouped$CMessageMgr$onRevokeMsg$)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id); static void _logos_method$_ungrouped$CMessageMgr$onRevokeMsg$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id); static void (*_logos_orig$_ungrouped$CMessageMgr$onRevokeMsgCgiReturn$)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id); static void _logos_method$_ungrouped$CMessageMgr$onRevokeMsgCgiReturn$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id); static _Bool (*_logos_orig$_ungrouped$CMessageMgr$RevokeMsg$MsgWrap$Counter$)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, id, unsigned int); static _Bool _logos_method$_ungrouped$CMessageMgr$RevokeMsg$MsgWrap$Counter$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, id, unsigned int); static void (*_logos_orig$_ungrouped$CMessageMgr$AsyncOnCheckQQ)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL); static void _logos_method$_ungrouped$CMessageMgr$AsyncOnCheckQQ(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL); static void (*_logos_orig$_ungrouped$CMessageMgr$AsyncOnModMsg$MsgWrap$)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, id); static void _logos_method$_ungrouped$CMessageMgr$AsyncOnModMsg$MsgWrap$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, id); static _Bool (*_logos_orig$_ungrouped$CMessageMgr$IsVideoMsgdDownloadIng$)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id); static _Bool _logos_method$_ungrouped$CMessageMgr$IsVideoMsgdDownloadIng$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id); static _Bool (*_logos_orig$_ungrouped$CMessageMgr$IsVideoMsgUploadIng$)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id); static _Bool _logos_method$_ungrouped$CMessageMgr$IsVideoMsgUploadIng$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id); static void (*_logos_orig$_ungrouped$CMessageMgr$InitMsgMgr$Lock$)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, id); static void _logos_method$_ungrouped$CMessageMgr$InitMsgMgr$Lock$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, id); static _Bool (*_logos_orig$_ungrouped$CMessageMgr$SaveMesVoice$MsgWrap$)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, id); static _Bool _logos_method$_ungrouped$CMessageMgr$SaveMesVoice$MsgWrap$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, id); static _Bool (*_logos_orig$_ungrouped$CMessageMgr$SaveMsgThumb$MsgWrap$)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, id); static _Bool _logos_method$_ungrouped$CMessageMgr$SaveMsgThumb$MsgWrap$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, id); static _Bool (*_logos_orig$_ungrouped$CMessageMgr$SaveMesImg$MsgWrap$)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, id); static _Bool _logos_method$_ungrouped$CMessageMgr$SaveMesImg$MsgWrap$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, id); static void (*_logos_orig$_ungrouped$CMessageMgr$dealloc)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL); static void _logos_method$_ungrouped$CMessageMgr$dealloc(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL); static CMessageMgr* (*_logos_orig$_ungrouped$CMessageMgr$init)(_LOGOS_SELF_TYPE_INIT CMessageMgr*, SEL) _LOGOS_RETURN_RETAINED; static CMessageMgr* _logos_method$_ungrouped$CMessageMgr$init(_LOGOS_SELF_TYPE_INIT CMessageMgr*, SEL) _LOGOS_RETURN_RETAINED; static void (*_logos_orig$_ungrouped$CMessageMgr$MainThreadNotifyToExt$)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id); static void _logos_method$_ungrouped$CMessageMgr$MainThreadNotifyToExt$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id); static void (*_logos_orig$_ungrouped$CMessageMgr$AsyncOnPushMsg$)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id); static void _logos_method$_ungrouped$CMessageMgr$AsyncOnPushMsg$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id); static void (*_logos_orig$_ungrouped$CMessageMgr$AsyncOnDelMsg$MsgWrap$)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, id); static void _logos_method$_ungrouped$CMessageMgr$AsyncOnDelMsg$MsgWrap$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, id); static void (*_logos_orig$_ungrouped$CMessageMgr$AsyncOnSendVoiceError$MsgWrap$ErroNO$)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, id, unsigned int); static void _logos_method$_ungrouped$CMessageMgr$AsyncOnSendVoiceError$MsgWrap$ErroNO$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, id, unsigned int); static void (*_logos_orig$_ungrouped$CMessageMgr$AsyncOnUnReadChange$)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id); static void _logos_method$_ungrouped$CMessageMgr$AsyncOnUnReadChange$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id); static void (*_logos_orig$_ungrouped$CMessageMgr$AsyncOnDelMsg$DelAll$)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, _Bool); static void _logos_method$_ungrouped$CMessageMgr$AsyncOnDelMsg$DelAll$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, _Bool); static void (*_logos_orig$_ungrouped$CMessageMgr$AsyncOnDelMsg$)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id); static void _logos_method$_ungrouped$CMessageMgr$AsyncOnDelMsg$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id); static void (*_logos_orig$_ungrouped$CMessageMgr$AsyncOnMsgNotAddDBSession$MsgList$)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, id); static void _logos_method$_ungrouped$CMessageMgr$AsyncOnMsgNotAddDBSession$MsgList$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, id); static void (*_logos_orig$_ungrouped$CMessageMgr$AsyncOnSpecialSession$MsgList$)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, id); static void _logos_method$_ungrouped$CMessageMgr$AsyncOnSpecialSession$MsgList$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, id); static void (*_logos_orig$_ungrouped$CMessageMgr$AsyncOnNotAddDBMessage$MsgWrap$)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, id); static void _logos_method$_ungrouped$CMessageMgr$AsyncOnNotAddDBMessage$MsgWrap$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, id); static void (*_logos_orig$_ungrouped$CMessageMgr$AsyncOnAddMsgForSession$MsgWrap$NewMsgArriveNotify$)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, id, _Bool); static void _logos_method$_ungrouped$CMessageMgr$AsyncOnAddMsgForSession$MsgWrap$NewMsgArriveNotify$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, id, _Bool); static void (*_logos_orig$_ungrouped$CMessageMgr$AsyncOnAddMsgForSession$MsgWrap$)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, id); static void _logos_method$_ungrouped$CMessageMgr$AsyncOnAddMsgForSession$MsgWrap$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, id); static void (*_logos_orig$_ungrouped$CMessageMgr$AsyncOnAddMsgListForSession$NotifyUsrName$)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, id); static void _logos_method$_ungrouped$CMessageMgr$AsyncOnAddMsgListForSession$NotifyUsrName$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, id); static void (*_logos_orig$_ungrouped$CMessageMgr$AsyncOnPreAddMsg$MsgWrap$)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, id); static void _logos_method$_ungrouped$CMessageMgr$AsyncOnPreAddMsg$MsgWrap$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, id); static void (*_logos_orig$_ungrouped$CMessageMgr$UpdateVideoStatus$)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id); static void _logos_method$_ungrouped$CMessageMgr$UpdateVideoStatus$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id); static _Bool (*_logos_orig$_ungrouped$CMessageMgr$IsRecordMsgUploading$)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id); static _Bool _logos_method$_ungrouped$CMessageMgr$IsRecordMsgUploading$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id); static _Bool (*_logos_orig$_ungrouped$CMessageMgr$IsImageMsgUploadIng$)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id); static _Bool _logos_method$_ungrouped$CMessageMgr$IsImageMsgUploadIng$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id); static id (*_logos_orig$_ungrouped$CMessageMgr$escapeKeywordForQueryString$)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id); static id _logos_method$_ungrouped$CMessageMgr$escapeKeywordForQueryString$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id); static _Bool (*_logos_orig$_ungrouped$CMessageMgr$isContact$ConfirmToQueryString$)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, id); static _Bool _logos_method$_ungrouped$CMessageMgr$isContact$ConfirmToQueryString$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, id); static void (*_logos_orig$_ungrouped$CMessageMgr$BackGroundAddHelloMsg$)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id); static void _logos_method$_ungrouped$CMessageMgr$BackGroundAddHelloMsg$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id); static void (*_logos_orig$_ungrouped$CMessageMgr$AsyncOnAddMsg$MsgWrap$)(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, id); static void _logos_method$_ungrouped$CMessageMgr$AsyncOnAddMsg$MsgWrap$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, id, id); static void _logos_method$_ungrouped$CMessageMgr$sendTextMsgToUsr$text$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST, SEL, NSString*, NSString*); 

#line 3 "/Users/jamy/works/wxtweak/wxtweak/CMessageMgr.xm"


static id _logos_meta_method$_ungrouped$CMessageMgr$GetPathOfOpenUploadCDNFile(_LOGOS_SELF_TYPE_NORMAL Class _LOGOS_SELF_CONST self, SEL _cmd) { HBLogDebug(@"+[<CMessageMgr: %p> GetPathOfOpenUploadCDNFile]", self); id r = _logos_meta_orig$_ungrouped$CMessageMgr$GetPathOfOpenUploadCDNFile(self, _cmd); HBLogDebug(@" = %@", r); return r; }
static id _logos_meta_method$_ungrouped$CMessageMgr$GetPathOfOpenUploadFile(_LOGOS_SELF_TYPE_NORMAL Class _LOGOS_SELF_CONST self, SEL _cmd) { HBLogDebug(@"+[<CMessageMgr: %p> GetPathOfOpenUploadFile]", self); id r = _logos_meta_orig$_ungrouped$CMessageMgr$GetPathOfOpenUploadFile(self, _cmd); HBLogDebug(@" = %@", r); return r; }
static void _logos_method$_ungrouped$CMessageMgr$onDownOpenMsgModMsg$MsgWrap$BitSet$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd, id arg1, id arg2, unsigned int arg3) { HBLogDebug(@"-[<CMessageMgr: %p> onDownOpenMsgModMsg:%@ MsgWrap:%@ BitSet:%u]", self, arg1, arg2, arg3); _logos_orig$_ungrouped$CMessageMgr$onDownOpenMsgModMsg$MsgWrap$BitSet$(self, _cmd, arg1, arg2, arg3); }
static void _logos_method$_ungrouped$CMessageMgr$onUploadImageCheckQQ(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd) { HBLogDebug(@"-[<CMessageMgr: %p> onUploadImageCheckQQ]", self); _logos_orig$_ungrouped$CMessageMgr$onUploadImageCheckQQ(self, _cmd); }
static void _logos_method$_ungrouped$CMessageMgr$onUploadImageModMsg$MsgWrap$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd, id arg1, id arg2) { HBLogDebug(@"-[<CMessageMgr: %p> onUploadImageModMsg:%@ MsgWrap:%@]", self, arg1, arg2); _logos_orig$_ungrouped$CMessageMgr$onUploadImageModMsg$MsgWrap$(self, _cmd, arg1, arg2); }
static void _logos_method$_ungrouped$CMessageMgr$onUploadImageModMsgByBitSet$MsgWrap$BitSet$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd, id arg1, id arg2, unsigned int arg3) { HBLogDebug(@"-[<CMessageMgr: %p> onUploadImageModMsgByBitSet:%@ MsgWrap:%@ BitSet:%u]", self, arg1, arg2, arg3); _logos_orig$_ungrouped$CMessageMgr$onUploadImageModMsgByBitSet$MsgWrap$BitSet$(self, _cmd, arg1, arg2, arg3); }
static void _logos_method$_ungrouped$CMessageMgr$onModMsgByBitSet$MsgWrap$BitSet$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd, id arg1, id arg2, unsigned int arg3) { HBLogDebug(@"-[<CMessageMgr: %p> onModMsgByBitSet:%@ MsgWrap:%@ BitSet:%u]", self, arg1, arg2, arg3); _logos_orig$_ungrouped$CMessageMgr$onModMsgByBitSet$MsgWrap$BitSet$(self, _cmd, arg1, arg2, arg3); }
static id _logos_method$_ungrouped$CMessageMgr$onGetMsg$LocalID$Wrap$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd, id arg1, unsigned int arg2, id arg3) { HBLogDebug(@"-[<CMessageMgr: %p> onGetMsg:%@ LocalID:%u Wrap:%@]", self, arg1, arg2, arg3); id r = _logos_orig$_ungrouped$CMessageMgr$onGetMsg$LocalID$Wrap$(self, _cmd, arg1, arg2, arg3); HBLogDebug(@" = %@", r); return r; }
static void _logos_method$_ungrouped$CMessageMgr$onGetBigImageErrorWithWrap$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd, id arg1) { HBLogDebug(@"-[<CMessageMgr: %p> onGetBigImageErrorWithWrap:%@]", self, arg1); _logos_orig$_ungrouped$CMessageMgr$onGetBigImageErrorWithWrap$(self, _cmd, arg1); }
static void _logos_method$_ungrouped$CMessageMgr$onGetBigImageResultWithWrap$image$imageData$isSaveImgOK$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd, id arg1, id arg2, id arg3, _Bool * arg4) { HBLogDebug(@"-[<CMessageMgr: %p> onGetBigImageResultWithWrap:%@ image:%@ imageData:%@ isSaveImgOK:%p]", self, arg1, arg2, arg3, arg4); _logos_orig$_ungrouped$CMessageMgr$onGetBigImageResultWithWrap$image$imageData$isSaveImgOK$(self, _cmd, arg1, arg2, arg3, arg4); }
static void _logos_method$_ungrouped$CMessageMgr$onUploadImageRequestWithWrap$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd, id arg1) { HBLogDebug(@"-[<CMessageMgr: %p> onUploadImageRequestWithWrap:%@]", self, arg1); _logos_orig$_ungrouped$CMessageMgr$onUploadImageRequestWithWrap$(self, _cmd, arg1); }
static void _logos_method$_ungrouped$CMessageMgr$enterBackground(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd) { HBLogDebug(@"-[<CMessageMgr: %p> enterBackground]", self); _logos_orig$_ungrouped$CMessageMgr$enterBackground(self, _cmd); }
static void _logos_method$_ungrouped$CMessageMgr$enterForeground(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd) { HBLogDebug(@"-[<CMessageMgr: %p> enterForeground]", self); _logos_orig$_ungrouped$CMessageMgr$enterForeground(self, _cmd); }
static void _logos_method$_ungrouped$CMessageMgr$reSendAllMsgFromNotificationDone(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd) { HBLogDebug(@"-[<CMessageMgr: %p> reSendAllMsgFromNotificationDone]", self); _logos_orig$_ungrouped$CMessageMgr$reSendAllMsgFromNotificationDone(self, _cmd); }
static id _logos_method$_ungrouped$CMessageMgr$getSentFailMsgs(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd) { HBLogDebug(@"-[<CMessageMgr: %p> getSentFailMsgs]", self); id r = _logos_orig$_ungrouped$CMessageMgr$getSentFailMsgs(self, _cmd); HBLogDebug(@" = %@", r); return r; }
static void _logos_method$_ungrouped$CMessageMgr$OnModMsg$MsgWrap$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd, id arg1, id arg2) { HBLogDebug(@"-[<CMessageMgr: %p> OnModMsg:%@ MsgWrap:%@]", self, arg1, arg2); _logos_orig$_ungrouped$CMessageMgr$OnModMsg$MsgWrap$(self, _cmd, arg1, arg2); }
static void _logos_method$_ungrouped$CMessageMgr$onAuthOK(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd) { HBLogDebug(@"-[<CMessageMgr: %p> onAuthOK]", self); _logos_orig$_ungrouped$CMessageMgr$onAuthOK(self, _cmd); }
static id _logos_method$_ungrouped$CMessageMgr$getSemaphore(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd) { HBLogDebug(@"-[<CMessageMgr: %p> getSemaphore]", self); id r = _logos_orig$_ungrouped$CMessageMgr$getSemaphore(self, _cmd); HBLogDebug(@" = %@", r); return r; }
static _Bool _logos_method$_ungrouped$CMessageMgr$IsRecordMsgDownloading$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd, id arg1) { HBLogDebug(@"-[<CMessageMgr: %p> IsRecordMsgDownloading:%@]", self, arg1); _Bool r = _logos_orig$_ungrouped$CMessageMgr$IsRecordMsgDownloading$(self, _cmd, arg1); HBLogDebug(@" = %d", r); return r; }
static void _logos_method$_ungrouped$CMessageMgr$StopDownloadRecordMsg$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd, id arg1) { HBLogDebug(@"-[<CMessageMgr: %p> StopDownloadRecordMsg:%@]", self, arg1); _logos_orig$_ungrouped$CMessageMgr$StopDownloadRecordMsg$(self, _cmd, arg1); }
static void _logos_method$_ungrouped$CMessageMgr$StartDownloadByRecordData$DataId$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd, id arg1, id arg2) { HBLogDebug(@"-[<CMessageMgr: %p> StartDownloadByRecordData:%@ DataId:%@]", self, arg1, arg2); _logos_orig$_ungrouped$CMessageMgr$StartDownloadByRecordData$DataId$(self, _cmd, arg1, arg2); }
static void _logos_method$_ungrouped$CMessageMgr$StartDownloadByRecordMsg$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd, id arg1) { HBLogDebug(@"-[<CMessageMgr: %p> StartDownloadByRecordMsg:%@]", self, arg1); _logos_orig$_ungrouped$CMessageMgr$StartDownloadByRecordMsg$(self, _cmd, arg1); }
static void _logos_method$_ungrouped$CMessageMgr$StopUploadRecordMsgByUsername$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd, id arg1) { HBLogDebug(@"-[<CMessageMgr: %p> StopUploadRecordMsgByUsername:%@]", self, arg1); _logos_orig$_ungrouped$CMessageMgr$StopUploadRecordMsgByUsername$(self, _cmd, arg1); }
static void _logos_method$_ungrouped$CMessageMgr$StopUploadRecordMsg$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd, id arg1) { HBLogDebug(@"-[<CMessageMgr: %p> StopUploadRecordMsg:%@]", self, arg1); _logos_orig$_ungrouped$CMessageMgr$StopUploadRecordMsg$(self, _cmd, arg1); }
static void _logos_method$_ungrouped$CMessageMgr$ResendRecordMsg$MsgWrap$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd, id arg1, id arg2) { HBLogDebug(@"-[<CMessageMgr: %p> ResendRecordMsg:%@ MsgWrap:%@]", self, arg1, arg2); _logos_orig$_ungrouped$CMessageMgr$ResendRecordMsg$MsgWrap$(self, _cmd, arg1, arg2); }
static void _logos_method$_ungrouped$CMessageMgr$AddRecordMsg$MsgWrap$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd, id arg1, id arg2) { HBLogDebug(@"-[<CMessageMgr: %p> AddRecordMsg:%@ MsgWrap:%@]", self, arg1, arg2); _logos_orig$_ungrouped$CMessageMgr$AddRecordMsg$MsgWrap$(self, _cmd, arg1, arg2); }
static void _logos_method$_ungrouped$CMessageMgr$StartDownloadAppAttach$MsgWrap$AttachId$AttachDataSize$AttachFileExt$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd, id arg1, id arg2, id arg3, unsigned int arg4, id arg5) { HBLogDebug(@"-[<CMessageMgr: %p> StartDownloadAppAttach:%@ MsgWrap:%@ AttachId:%@ AttachDataSize:%u AttachFileExt:%@]", self, arg1, arg2, arg3, arg4, arg5); _logos_orig$_ungrouped$CMessageMgr$StartDownloadAppAttach$MsgWrap$AttachId$AttachDataSize$AttachFileExt$(self, _cmd, arg1, arg2, arg3, arg4, arg5); }
static _Bool _logos_method$_ungrouped$CMessageMgr$InAppAttachDownloading$MsgWrap$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd, id arg1, id arg2) { HBLogDebug(@"-[<CMessageMgr: %p> InAppAttachDownloading:%@ MsgWrap:%@]", self, arg1, arg2); _Bool r = _logos_orig$_ungrouped$CMessageMgr$InAppAttachDownloading$MsgWrap$(self, _cmd, arg1, arg2); HBLogDebug(@" = %d", r); return r; }
static _Bool _logos_method$_ungrouped$CMessageMgr$InAppAttachDownloading$MsgWrap$AttachId$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd, id arg1, id arg2, id arg3) { HBLogDebug(@"-[<CMessageMgr: %p> InAppAttachDownloading:%@ MsgWrap:%@ AttachId:%@]", self, arg1, arg2, arg3); _Bool r = _logos_orig$_ungrouped$CMessageMgr$InAppAttachDownloading$MsgWrap$AttachId$(self, _cmd, arg1, arg2, arg3); HBLogDebug(@" = %d", r); return r; }
static _Bool _logos_method$_ungrouped$CMessageMgr$RollbackTransaction(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd) { HBLogDebug(@"-[<CMessageMgr: %p> RollbackTransaction]", self); _Bool r = _logos_orig$_ungrouped$CMessageMgr$RollbackTransaction(self, _cmd); HBLogDebug(@" = %d", r); return r; }
static _Bool _logos_method$_ungrouped$CMessageMgr$CommitTransaction(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd) { HBLogDebug(@"-[<CMessageMgr: %p> CommitTransaction]", self); _Bool r = _logos_orig$_ungrouped$CMessageMgr$CommitTransaction(self, _cmd); HBLogDebug(@" = %d", r); return r; }
static _Bool _logos_method$_ungrouped$CMessageMgr$BeginTransaction(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd) { HBLogDebug(@"-[<CMessageMgr: %p> BeginTransaction]", self); _Bool r = _logos_orig$_ungrouped$CMessageMgr$BeginTransaction(self, _cmd); HBLogDebug(@" = %d", r); return r; }
static id _logos_method$_ungrouped$CMessageMgr$DBContext(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd) { HBLogDebug(@"-[<CMessageMgr: %p> DBContext]", self); id r = _logos_orig$_ungrouped$CMessageMgr$DBContext(self, _cmd); HBLogDebug(@" = %@", r); return r; }
static void _logos_method$_ungrouped$CMessageMgr$onDiskStorageWarningCleanedSize$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd, unsigned int * arg1) { HBLogDebug(@"-[<CMessageMgr: %p> onDiskStorageWarningCleanedSize:%p]", self, arg1); _logos_orig$_ungrouped$CMessageMgr$onDiskStorageWarningCleanedSize$(self, _cmd, arg1); }
static void _logos_method$_ungrouped$CMessageMgr$addAutoCleanTask(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd) { HBLogDebug(@"-[<CMessageMgr: %p> addAutoCleanTask]", self); _logos_orig$_ungrouped$CMessageMgr$addAutoCleanTask(self, _cmd); }
static unsigned int _logos_method$_ungrouped$CMessageMgr$GetDownloadThumbStatus$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd, id arg1) { HBLogDebug(@"-[<CMessageMgr: %p> GetDownloadThumbStatus:%@]", self, arg1); unsigned int r = _logos_orig$_ungrouped$CMessageMgr$GetDownloadThumbStatus$(self, _cmd, arg1); HBLogDebug(@" = %u", r); return r; }
static _Bool _logos_method$_ungrouped$CMessageMgr$StartDownloadThumb$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd, id arg1) { HBLogDebug(@"-[<CMessageMgr: %p> StartDownloadThumb:%@]", self, arg1); _Bool r = _logos_orig$_ungrouped$CMessageMgr$StartDownloadThumb$(self, _cmd, arg1); HBLogDebug(@" = %d", r); return r; }
static unsigned int _logos_method$_ungrouped$CMessageMgr$GetUploadPercent$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd, id arg1) { HBLogDebug(@"-[<CMessageMgr: %p> GetUploadPercent:%@]", self, arg1); unsigned int r = _logos_orig$_ungrouped$CMessageMgr$GetUploadPercent$(self, _cmd, arg1); HBLogDebug(@" = %u", r); return r; }
static unsigned int _logos_method$_ungrouped$CMessageMgr$GetDownloadImageTotalLen$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd, id arg1) { HBLogDebug(@"-[<CMessageMgr: %p> GetDownloadImageTotalLen:%@]", self, arg1); unsigned int r = _logos_orig$_ungrouped$CMessageMgr$GetDownloadImageTotalLen$(self, _cmd, arg1); HBLogDebug(@" = %u", r); return r; }
static unsigned int _logos_method$_ungrouped$CMessageMgr$GetDownloadImagePartLen$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd, id arg1) { HBLogDebug(@"-[<CMessageMgr: %p> GetDownloadImagePartLen:%@]", self, arg1); unsigned int r = _logos_orig$_ungrouped$CMessageMgr$GetDownloadImagePartLen$(self, _cmd, arg1); HBLogDebug(@" = %u", r); return r; }
static void _logos_method$_ungrouped$CMessageMgr$StopDownloadImage$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd, id arg1) { HBLogDebug(@"-[<CMessageMgr: %p> StopDownloadImage:%@]", self, arg1); _logos_orig$_ungrouped$CMessageMgr$StopDownloadImage$(self, _cmd, arg1); }
static void _logos_method$_ungrouped$CMessageMgr$StartDownloadImage$HD$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd, id arg1, _Bool arg2) { HBLogDebug(@"-[<CMessageMgr: %p> StartDownloadImage:%@ HD:%d]", self, arg1, arg2); _logos_orig$_ungrouped$CMessageMgr$StartDownloadImage$HD$(self, _cmd, arg1, arg2); }
static unsigned int _logos_method$_ungrouped$CMessageMgr$GetImgOrVideoMsgCount$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd, id arg1) { HBLogDebug(@"-[<CMessageMgr: %p> GetImgOrVideoMsgCount:%@]", self, arg1); unsigned int r = _logos_orig$_ungrouped$CMessageMgr$GetImgOrVideoMsgCount$(self, _cmd, arg1); HBLogDebug(@" = %u", r); return r; }
static unsigned int _logos_method$_ungrouped$CMessageMgr$GetImgOrVideoMsgCount$FromID$CreateTime$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd, id arg1, unsigned int arg2, unsigned int arg3) { HBLogDebug(@"-[<CMessageMgr: %p> GetImgOrVideoMsgCount:%@ FromID:%u CreateTime:%u]", self, arg1, arg2, arg3); unsigned int r = _logos_orig$_ungrouped$CMessageMgr$GetImgOrVideoMsgCount$FromID$CreateTime$(self, _cmd, arg1, arg2, arg3); HBLogDebug(@" = %u", r); return r; }
static id _logos_method$_ungrouped$CMessageMgr$GetImgOrVideoNextMsg$FromID$CreateTime$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd, id arg1, unsigned int arg2, unsigned int arg3) { HBLogDebug(@"-[<CMessageMgr: %p> GetImgOrVideoNextMsg:%@ FromID:%u CreateTime:%u]", self, arg1, arg2, arg3); id r = _logos_orig$_ungrouped$CMessageMgr$GetImgOrVideoNextMsg$FromID$CreateTime$(self, _cmd, arg1, arg2, arg3); HBLogDebug(@" = %@", r); return r; }
static id _logos_method$_ungrouped$CMessageMgr$GetImgOrVideoLastMsg$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd, id arg1) { HBLogDebug(@"-[<CMessageMgr: %p> GetImgOrVideoLastMsg:%@]", self, arg1); id r = _logos_orig$_ungrouped$CMessageMgr$GetImgOrVideoLastMsg$(self, _cmd, arg1); HBLogDebug(@" = %@", r); return r; }
static id _logos_method$_ungrouped$CMessageMgr$GetImgOrVideoLastMsg$FromID$CreateTime$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd, id arg1, unsigned int arg2, unsigned int arg3) { HBLogDebug(@"-[<CMessageMgr: %p> GetImgOrVideoLastMsg:%@ FromID:%u CreateTime:%u]", self, arg1, arg2, arg3); id r = _logos_orig$_ungrouped$CMessageMgr$GetImgOrVideoLastMsg$FromID$CreateTime$(self, _cmd, arg1, arg2, arg3); HBLogDebug(@" = %@", r); return r; }
static id _logos_method$_ungrouped$CMessageMgr$GetImgAndVideoMsgList$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd, id arg1) { HBLogDebug(@"-[<CMessageMgr: %p> GetImgAndVideoMsgList:%@]", self, arg1); id r = _logos_orig$_ungrouped$CMessageMgr$GetImgAndVideoMsgList$(self, _cmd, arg1); HBLogDebug(@" = %@", r); return r; }
static id _logos_method$_ungrouped$CMessageMgr$GetImgMsgList$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd, id arg1) { HBLogDebug(@"-[<CMessageMgr: %p> GetImgMsgList:%@]", self, arg1); id r = _logos_orig$_ungrouped$CMessageMgr$GetImgMsgList$(self, _cmd, arg1); HBLogDebug(@" = %@", r); return r; }
static unsigned int _logos_method$_ungrouped$CMessageMgr$GetImgMsgCount$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd, id arg1) { HBLogDebug(@"-[<CMessageMgr: %p> GetImgMsgCount:%@]", self, arg1); unsigned int r = _logos_orig$_ungrouped$CMessageMgr$GetImgMsgCount$(self, _cmd, arg1); HBLogDebug(@" = %u", r); return r; }
static unsigned int _logos_method$_ungrouped$CMessageMgr$GetImgMsgCount$FromID$CreateTime$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd, id arg1, unsigned int arg2, unsigned int arg3) { HBLogDebug(@"-[<CMessageMgr: %p> GetImgMsgCount:%@ FromID:%u CreateTime:%u]", self, arg1, arg2, arg3); unsigned int r = _logos_orig$_ungrouped$CMessageMgr$GetImgMsgCount$FromID$CreateTime$(self, _cmd, arg1, arg2, arg3); HBLogDebug(@" = %u", r); return r; }
static id _logos_method$_ungrouped$CMessageMgr$GetImgLastMsg$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd, id arg1) { HBLogDebug(@"-[<CMessageMgr: %p> GetImgLastMsg:%@]", self, arg1); id r = _logos_orig$_ungrouped$CMessageMgr$GetImgLastMsg$(self, _cmd, arg1); HBLogDebug(@" = %@", r); return r; }
static id _logos_method$_ungrouped$CMessageMgr$GetImgLastMsg$FromID$CreateTime$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd, id arg1, unsigned int arg2, unsigned int arg3) { HBLogDebug(@"-[<CMessageMgr: %p> GetImgLastMsg:%@ FromID:%u CreateTime:%u]", self, arg1, arg2, arg3); id r = _logos_orig$_ungrouped$CMessageMgr$GetImgLastMsg$FromID$CreateTime$(self, _cmd, arg1, arg2, arg3); HBLogDebug(@" = %@", r); return r; }
static id _logos_method$_ungrouped$CMessageMgr$GetImgNextMsg$FromID$CreateTime$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd, id arg1, unsigned int arg2, unsigned int arg3) { HBLogDebug(@"-[<CMessageMgr: %p> GetImgNextMsg:%@ FromID:%u CreateTime:%u]", self, arg1, arg2, arg3); id r = _logos_orig$_ungrouped$CMessageMgr$GetImgNextMsg$FromID$CreateTime$(self, _cmd, arg1, arg2, arg3); HBLogDebug(@" = %@", r); return r; }
static void _logos_method$_ungrouped$CMessageMgr$onServiceClearData(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd) { HBLogDebug(@"-[<CMessageMgr: %p> onServiceClearData]", self); _logos_orig$_ungrouped$CMessageMgr$onServiceClearData(self, _cmd); }
static _Bool _logos_method$_ungrouped$CMessageMgr$onServiceMemoryWarning(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd) { HBLogDebug(@"-[<CMessageMgr: %p> onServiceMemoryWarning]", self); _Bool r = _logos_orig$_ungrouped$CMessageMgr$onServiceMemoryWarning(self, _cmd); HBLogDebug(@" = %d", r); return r; }
static void _logos_method$_ungrouped$CMessageMgr$onServiceInit(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd) { HBLogDebug(@"-[<CMessageMgr: %p> onServiceInit]", self); _logos_orig$_ungrouped$CMessageMgr$onServiceInit(self, _cmd); }
static void _logos_method$_ungrouped$CMessageMgr$CheckQQPwd(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd) { HBLogDebug(@"-[<CMessageMgr: %p> CheckQQPwd]", self); _logos_orig$_ungrouped$CMessageMgr$CheckQQPwd(self, _cmd); }
static void _logos_method$_ungrouped$CMessageMgr$UpdateVideoMsg$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd, id arg1) { HBLogDebug(@"-[<CMessageMgr: %p> UpdateVideoMsg:%@]", self, arg1); _logos_orig$_ungrouped$CMessageMgr$UpdateVideoMsg$(self, _cmd, arg1); }
static void _logos_method$_ungrouped$CMessageMgr$OnErrorByReceiver$ErrNo$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd, id arg1, int arg2) { HBLogDebug(@"-[<CMessageMgr: %p> OnErrorByReceiver:%@ ErrNo:%d]", self, arg1, arg2); _logos_orig$_ungrouped$CMessageMgr$OnErrorByReceiver$ErrNo$(self, _cmd, arg1, arg2); }
static void _logos_method$_ungrouped$CMessageMgr$OnErrorBySender$ErrNo$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd, id arg1, int arg2) { HBLogDebug(@"-[<CMessageMgr: %p> OnErrorBySender:%@ ErrNo:%d]", self, arg1, arg2); _logos_orig$_ungrouped$CMessageMgr$OnErrorBySender$ErrNo$(self, _cmd, arg1, arg2); }
static void _logos_method$_ungrouped$CMessageMgr$OnMessageSentBySender$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd, id arg1) { HBLogDebug(@"-[<CMessageMgr: %p> OnMessageSentBySender:%@]", self, arg1); _logos_orig$_ungrouped$CMessageMgr$OnMessageSentBySender$(self, _cmd, arg1); }
static void _logos_method$_ungrouped$CMessageMgr$OnAddMessageByReceiver$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd, id arg1) { HBLogDebug(@"-[<CMessageMgr: %p> OnAddMessageByReceiver:%@]", self, arg1); _logos_orig$_ungrouped$CMessageMgr$OnAddMessageByReceiver$(self, _cmd, arg1); }
static void _logos_method$_ungrouped$CMessageMgr$OnAddMessageBySender$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd, id arg1) { HBLogDebug(@"-[<CMessageMgr: %p> OnAddMessageBySender:%@]", self, arg1); _logos_orig$_ungrouped$CMessageMgr$OnAddMessageBySender$(self, _cmd, arg1); }
static void _logos_method$_ungrouped$CMessageMgr$MessageReturn$MessageInfo$Event$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd, unsigned int arg1, id arg2, unsigned int arg3) { HBLogDebug(@"-[<CMessageMgr: %p> MessageReturn:%u MessageInfo:%@ Event:%u]", self, arg1, arg2, arg3); _logos_orig$_ungrouped$CMessageMgr$MessageReturn$MessageInfo$Event$(self, _cmd, arg1, arg2, arg3); }
static void _logos_method$_ungrouped$CMessageMgr$MessageReturn$Event$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd, id arg1, unsigned int arg2) { HBLogDebug(@"-[<CMessageMgr: %p> MessageReturn:%@ Event:%u]", self, arg1, arg2); _logos_orig$_ungrouped$CMessageMgr$MessageReturn$Event$(self, _cmd, arg1, arg2); }
static void _logos_method$_ungrouped$CMessageMgr$HandleSvrCmd$MsgWrap$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd, id arg1, id arg2) { HBLogDebug(@"-[<CMessageMgr: %p> HandleSvrCmd:%@ MsgWrap:%@]", self, arg1, arg2); _logos_orig$_ungrouped$CMessageMgr$HandleSvrCmd$MsgWrap$(self, _cmd, arg1, arg2); }
static void _logos_method$_ungrouped$CMessageMgr$DelMsgPatten$MsgWrap$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd, id arg1, id arg2) { HBLogDebug(@"-[<CMessageMgr: %p> DelMsgPatten:%@ MsgWrap:%@]", self, arg1, arg2); _logos_orig$_ungrouped$CMessageMgr$DelMsgPatten$MsgWrap$(self, _cmd, arg1, arg2); }
static id _logos_method$_ungrouped$CMessageMgr$GetLastMsgToUsr$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd, id arg1) { HBLogDebug(@"-[<CMessageMgr: %p> GetLastMsgToUsr:%@]", self, arg1); id r = _logos_orig$_ungrouped$CMessageMgr$GetLastMsgToUsr$(self, _cmd, arg1); HBLogDebug(@" = %@", r); return r; }
static id _logos_method$_ungrouped$CMessageMgr$GetLastMsgFromUsr$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd, id arg1) { HBLogDebug(@"-[<CMessageMgr: %p> GetLastMsgFromUsr:%@]", self, arg1); id r = _logos_orig$_ungrouped$CMessageMgr$GetLastMsgFromUsr$(self, _cmd, arg1); HBLogDebug(@" = %@", r); return r; }
static void _logos_method$_ungrouped$CMessageMgr$ModVoipMsgStatus$MsgWrap$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd, id arg1, id arg2) { HBLogDebug(@"-[<CMessageMgr: %p> ModVoipMsgStatus:%@ MsgWrap:%@]", self, arg1, arg2); _logos_orig$_ungrouped$CMessageMgr$ModVoipMsgStatus$MsgWrap$(self, _cmd, arg1, arg2); }
static void _logos_method$_ungrouped$CMessageMgr$CheckQueue(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd) { HBLogDebug(@"-[<CMessageMgr: %p> CheckQueue]", self); _logos_orig$_ungrouped$CMessageMgr$CheckQueue(self, _cmd); }
static id _logos_method$_ungrouped$CMessageMgr$GetRealChatName$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd, id arg1) { HBLogDebug(@"-[<CMessageMgr: %p> GetRealChatName:%@]", self, arg1); id r = _logos_orig$_ungrouped$CMessageMgr$GetRealChatName$(self, _cmd, arg1); HBLogDebug(@" = %@", r); return r; }
static void _logos_method$_ungrouped$CMessageMgr$StopDownloadAppAttach$MsgWrap$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd, id arg1, id arg2) { HBLogDebug(@"-[<CMessageMgr: %p> StopDownloadAppAttach:%@ MsgWrap:%@]", self, arg1, arg2); _logos_orig$_ungrouped$CMessageMgr$StopDownloadAppAttach$MsgWrap$(self, _cmd, arg1, arg2); }
static void _logos_method$_ungrouped$CMessageMgr$StartDownloadAppAttach$MsgWrap$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd, id arg1, id arg2) { HBLogDebug(@"-[<CMessageMgr: %p> StartDownloadAppAttach:%@ MsgWrap:%@]", self, arg1, arg2); _logos_orig$_ungrouped$CMessageMgr$StartDownloadAppAttach$MsgWrap$(self, _cmd, arg1, arg2); }
static void _logos_method$_ungrouped$CMessageMgr$AddAppMsg$MsgWrap$Data$Scene$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd, id arg1, id arg2, id arg3, unsigned int arg4) { HBLogDebug(@"-[<CMessageMgr: %p> AddAppMsg:%@ MsgWrap:%@ Data:%@ Scene:%u]", self, arg1, arg2, arg3, arg4); _logos_orig$_ungrouped$CMessageMgr$AddAppMsg$MsgWrap$Data$Scene$(self, _cmd, arg1, arg2, arg3, arg4); }
static void _logos_method$_ungrouped$CMessageMgr$StartUploadAppMsg$MsgWrap$Scene$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd, id arg1, id arg2, unsigned int arg3) { HBLogDebug(@"-[<CMessageMgr: %p> StartUploadAppMsg:%@ MsgWrap:%@ Scene:%u]", self, arg1, arg2, arg3); _logos_orig$_ungrouped$CMessageMgr$StartUploadAppMsg$MsgWrap$Scene$(self, _cmd, arg1, arg2, arg3); }
static void _logos_method$_ungrouped$CMessageMgr$SetGetLocationEnd$MsgWrap$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd, id arg1, id arg2) { HBLogDebug(@"-[<CMessageMgr: %p> SetGetLocationEnd:%@ MsgWrap:%@]", self, arg1, arg2); _logos_orig$_ungrouped$CMessageMgr$SetGetLocationEnd$MsgWrap$(self, _cmd, arg1, arg2); }
static void _logos_method$_ungrouped$CMessageMgr$UpdateEmoticonMsg$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd, id arg1) { HBLogDebug(@"-[<CMessageMgr: %p> UpdateEmoticonMsg:%@]", self, arg1); _logos_orig$_ungrouped$CMessageMgr$UpdateEmoticonMsg$(self, _cmd, arg1); }
static void _logos_method$_ungrouped$CMessageMgr$SetEmoticonGameEnd$MsgWrap$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd, id arg1, id arg2) { HBLogDebug(@"-[<CMessageMgr: %p> SetEmoticonGameEnd:%@ MsgWrap:%@]", self, arg1, arg2); _logos_orig$_ungrouped$CMessageMgr$SetEmoticonGameEnd$MsgWrap$(self, _cmd, arg1, arg2); }
static void _logos_method$_ungrouped$CMessageMgr$StartDownloadEmoticon$MsgWrap$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd, id arg1, id arg2) { HBLogDebug(@"-[<CMessageMgr: %p> StartDownloadEmoticon:%@ MsgWrap:%@]", self, arg1, arg2); _logos_orig$_ungrouped$CMessageMgr$StartDownloadEmoticon$MsgWrap$(self, _cmd, arg1, arg2); }
static void _logos_method$_ungrouped$CMessageMgr$AddEmoticonMsg$MsgWrap$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd, id arg1, id arg2) { HBLogDebug(@"-[<CMessageMgr: %p> AddEmoticonMsg:%@ MsgWrap:%@]", self, arg1, arg2); _logos_orig$_ungrouped$CMessageMgr$AddEmoticonMsg$MsgWrap$(self, _cmd, arg1, arg2); }
static _Bool _logos_method$_ungrouped$CMessageMgr$AddBackupMsg$MsgWrap$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd, id arg1, id arg2) { HBLogDebug(@"-[<CMessageMgr: %p> AddBackupMsg:%@ MsgWrap:%@]", self, arg1, arg2); _Bool r = _logos_orig$_ungrouped$CMessageMgr$AddBackupMsg$MsgWrap$(self, _cmd, arg1, arg2); HBLogDebug(@" = %d", r); return r; }
static _Bool _logos_method$_ungrouped$CMessageMgr$backupMsgSrvIDExit$MsgWrap$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd, id arg1, id arg2) { HBLogDebug(@"-[<CMessageMgr: %p> backupMsgSrvIDExit:%@ MsgWrap:%@]", self, arg1, arg2); _Bool r = _logos_orig$_ungrouped$CMessageMgr$backupMsgSrvIDExit$MsgWrap$(self, _cmd, arg1, arg2); HBLogDebug(@" = %d", r); return r; }
static id _logos_method$_ungrouped$CMessageMgr$backupGetMsg$n64SvrID$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd, id arg1, long long arg2) { HBLogDebug(@"-[<CMessageMgr: %p> backupGetMsg:%@ n64SvrID:%lld]", self, arg1, arg2); id r = _logos_orig$_ungrouped$CMessageMgr$backupGetMsg$n64SvrID$(self, _cmd, arg1, arg2); HBLogDebug(@" = %@", r); return r; }
static void _logos_method$_ungrouped$CMessageMgr$AddLocalMsg$MsgWrap$fixTime$NewMsgArriveNotify$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd, id arg1, id arg2, _Bool arg3, _Bool arg4) { HBLogDebug(@"-[<CMessageMgr: %p> AddLocalMsg:%@ MsgWrap:%@ fixTime:%d NewMsgArriveNotify:%d]", self, arg1, arg2, arg3, arg4); _logos_orig$_ungrouped$CMessageMgr$AddLocalMsg$MsgWrap$fixTime$NewMsgArriveNotify$(self, _cmd, arg1, arg2, arg3, arg4); }
static void _logos_method$_ungrouped$CMessageMgr$AddLocalMsg$MsgWrap$fixTime$NewMsgArriveNotify$Unique$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd, id arg1, id arg2, _Bool arg3, _Bool arg4, _Bool arg5) { HBLogDebug(@"-[<CMessageMgr: %p> AddLocalMsg:%@ MsgWrap:%@ fixTime:%d NewMsgArriveNotify:%d Unique:%d]", self, arg1, arg2, arg3, arg4, arg5); _logos_orig$_ungrouped$CMessageMgr$AddLocalMsg$MsgWrap$fixTime$NewMsgArriveNotify$Unique$(self, _cmd, arg1, arg2, arg3, arg4, arg5); }
static void _logos_method$_ungrouped$CMessageMgr$AddLocalMsg$MsgWrap$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd, id arg1, id arg2) { HBLogDebug(@"-[<CMessageMgr: %p> AddLocalMsg:%@ MsgWrap:%@]", self, arg1, arg2); _logos_orig$_ungrouped$CMessageMgr$AddLocalMsg$MsgWrap$(self, _cmd, arg1, arg2); }
static void _logos_method$_ungrouped$CMessageMgr$AddUniqueLocalMsg$MsgWrap$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd, id arg1, id arg2) { HBLogDebug(@"-[<CMessageMgr: %p> AddUniqueLocalMsg:%@ MsgWrap:%@]", self, arg1, arg2); _logos_orig$_ungrouped$CMessageMgr$AddUniqueLocalMsg$MsgWrap$(self, _cmd, arg1, arg2); }
static void _logos_method$_ungrouped$CMessageMgr$AddPimMsg$MsgWrap$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd, id arg1, id arg2) { HBLogDebug(@"-[<CMessageMgr: %p> AddPimMsg:%@ MsgWrap:%@]", self, arg1, arg2); _logos_orig$_ungrouped$CMessageMgr$AddPimMsg$MsgWrap$(self, _cmd, arg1, arg2); }
static void _logos_method$_ungrouped$CMessageMgr$DropChatTable$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd, id arg1) { HBLogDebug(@"-[<CMessageMgr: %p> DropChatTable:%@]", self, arg1); _logos_orig$_ungrouped$CMessageMgr$DropChatTable$(self, _cmd, arg1); }
static void _logos_method$_ungrouped$CMessageMgr$AddFloatBottle$MsgWrap$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd, id arg1, id arg2) { HBLogDebug(@"-[<CMessageMgr: %p> AddFloatBottle:%@ MsgWrap:%@]", self, arg1, arg2); _logos_orig$_ungrouped$CMessageMgr$AddFloatBottle$MsgWrap$(self, _cmd, arg1, arg2); }
static void _logos_method$_ungrouped$CMessageMgr$StopDownloadVideoByChatName$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd, id arg1) { HBLogDebug(@"-[<CMessageMgr: %p> StopDownloadVideoByChatName:%@]", self, arg1); _logos_orig$_ungrouped$CMessageMgr$StopDownloadVideoByChatName$(self, _cmd, arg1); }
static void _logos_method$_ungrouped$CMessageMgr$StopDownloadVideo$MsgWrap$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd, id arg1, id arg2) { HBLogDebug(@"-[<CMessageMgr: %p> StopDownloadVideo:%@ MsgWrap:%@]", self, arg1, arg2); _logos_orig$_ungrouped$CMessageMgr$StopDownloadVideo$MsgWrap$(self, _cmd, arg1, arg2); }
static void _logos_method$_ungrouped$CMessageMgr$StartDownloadVideo$MsgWrap$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd, id arg1, id arg2) { HBLogDebug(@"-[<CMessageMgr: %p> StartDownloadVideo:%@ MsgWrap:%@]", self, arg1, arg2); _logos_orig$_ungrouped$CMessageMgr$StartDownloadVideo$MsgWrap$(self, _cmd, arg1, arg2); }
static _Bool _logos_method$_ungrouped$CMessageMgr$InternalStartDownloadShortVideo$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd, id arg1) { HBLogDebug(@"-[<CMessageMgr: %p> InternalStartDownloadShortVideo:%@]", self, arg1); _Bool r = _logos_orig$_ungrouped$CMessageMgr$InternalStartDownloadShortVideo$(self, _cmd, arg1); HBLogDebug(@" = %d", r); return r; }
static void _logos_method$_ungrouped$CMessageMgr$StartDownloadShortVideo$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd, id arg1) { HBLogDebug(@"-[<CMessageMgr: %p> StartDownloadShortVideo:%@]", self, arg1); _logos_orig$_ungrouped$CMessageMgr$StartDownloadShortVideo$(self, _cmd, arg1); }
static void _logos_method$_ungrouped$CMessageMgr$StopUploadVideoByChatName$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd, id arg1) { HBLogDebug(@"-[<CMessageMgr: %p> StopUploadVideoByChatName:%@]", self, arg1); _logos_orig$_ungrouped$CMessageMgr$StopUploadVideoByChatName$(self, _cmd, arg1); }
static void _logos_method$_ungrouped$CMessageMgr$StopUploadVideo$MsgWrap$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd, id arg1, id arg2) { HBLogDebug(@"-[<CMessageMgr: %p> StopUploadVideo:%@ MsgWrap:%@]", self, arg1, arg2); _logos_orig$_ungrouped$CMessageMgr$StopUploadVideo$MsgWrap$(self, _cmd, arg1, arg2); }
static void _logos_method$_ungrouped$CMessageMgr$StartUploadVideo$MsgWrap$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd, id arg1, id arg2) { HBLogDebug(@"-[<CMessageMgr: %p> StartUploadVideo:%@ MsgWrap:%@]", self, arg1, arg2); _logos_orig$_ungrouped$CMessageMgr$StartUploadVideo$MsgWrap$(self, _cmd, arg1, arg2); }
static void _logos_method$_ungrouped$CMessageMgr$AddShortVideoLocalMsg$ToUsr$VideoInfo$MsgType$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd, id arg1, id arg2, id arg3, unsigned int arg4) { HBLogDebug(@"-[<CMessageMgr: %p> AddShortVideoLocalMsg:%@ ToUsr:%@ VideoInfo:%@ MsgType:%u]", self, arg1, arg2, arg3, arg4); _logos_orig$_ungrouped$CMessageMgr$AddShortVideoLocalMsg$ToUsr$VideoInfo$MsgType$(self, _cmd, arg1, arg2, arg3, arg4); }
static void _logos_method$_ungrouped$CMessageMgr$AddVideoMsg$ToUsr$VideoInfo$MsgType$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd, id arg1, id arg2, id arg3, unsigned int arg4) { HBLogDebug(@"-[<CMessageMgr: %p> AddVideoMsg:%@ ToUsr:%@ VideoInfo:%@ MsgType:%u]", self, arg1, arg2, arg3, arg4); _logos_orig$_ungrouped$CMessageMgr$AddVideoMsg$ToUsr$VideoInfo$MsgType$(self, _cmd, arg1, arg2, arg3, arg4); }
static void _logos_method$_ungrouped$CMessageMgr$ResendSightMsg$MsgWrap$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd, id arg1, id arg2) { HBLogDebug(@"-[<CMessageMgr: %p> ResendSightMsg:%@ MsgWrap:%@]", self, arg1, arg2); _logos_orig$_ungrouped$CMessageMgr$ResendSightMsg$MsgWrap$(self, _cmd, arg1, arg2); }
static void _logos_method$_ungrouped$CMessageMgr$AddShortVideoMsg$ToUsr$VideoInfo$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd, id arg1, id arg2, id arg3) { HBLogDebug(@"-[<CMessageMgr: %p> AddShortVideoMsg:%@ ToUsr:%@ VideoInfo:%@]", self, arg1, arg2, arg3); _logos_orig$_ungrouped$CMessageMgr$AddShortVideoMsg$ToUsr$VideoInfo$(self, _cmd, arg1, arg2, arg3); }
static void _logos_method$_ungrouped$CMessageMgr$AddVideoMsg$ToUsr$VideoInfo$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd, id arg1, id arg2, id arg3) { HBLogDebug(@"-[<CMessageMgr: %p> AddVideoMsg:%@ ToUsr:%@ VideoInfo:%@]", self, arg1, arg2, arg3); _logos_orig$_ungrouped$CMessageMgr$AddVideoMsg$ToUsr$VideoInfo$(self, _cmd, arg1, arg2, arg3); }
static void _logos_method$_ungrouped$CMessageMgr$UpdateMessage$MsgWrap$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd, id arg1, id arg2) { HBLogDebug(@"-[<CMessageMgr: %p> UpdateMessage:%@ MsgWrap:%@]", self, arg1, arg2); _logos_orig$_ungrouped$CMessageMgr$UpdateMessage$MsgWrap$(self, _cmd, arg1, arg2); }
static void _logos_method$_ungrouped$CMessageMgr$UpdateVoiceMessage$MsgWrap$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd, id arg1, id arg2) { HBLogDebug(@"-[<CMessageMgr: %p> UpdateVoiceMessage:%@ MsgWrap:%@]", self, arg1, arg2); _logos_orig$_ungrouped$CMessageMgr$UpdateVoiceMessage$MsgWrap$(self, _cmd, arg1, arg2); }
static void _logos_method$_ungrouped$CMessageMgr$UpdateVoiceStatus$LocalID$DownloadStatus$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd, id arg1, unsigned int arg2, unsigned int arg3) { HBLogDebug(@"-[<CMessageMgr: %p> UpdateVoiceStatus:%@ LocalID:%u DownloadStatus:%u]", self, arg1, arg2, arg3); _logos_orig$_ungrouped$CMessageMgr$UpdateVoiceStatus$LocalID$DownloadStatus$(self, _cmd, arg1, arg2, arg3); }
static unsigned int _logos_method$_ungrouped$CMessageMgr$GetMesCount$MesType$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd, id arg1, unsigned int arg2) { HBLogDebug(@"-[<CMessageMgr: %p> GetMesCount:%@ MesType:%u]", self, arg1, arg2); unsigned int r = _logos_orig$_ungrouped$CMessageMgr$GetMesCount$MesType$(self, _cmd, arg1, arg2); HBLogDebug(@" = %u", r); return r; }
static unsigned int _logos_method$_ungrouped$CMessageMgr$GetAllMesCount$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd, id arg1) { HBLogDebug(@"-[<CMessageMgr: %p> GetAllMesCount:%@]", self, arg1); unsigned int r = _logos_orig$_ungrouped$CMessageMgr$GetAllMesCount$(self, _cmd, arg1); HBLogDebug(@" = %u", r); return r; }
static unsigned int _logos_method$_ungrouped$CMessageMgr$GetUnReadCountInHello$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd, id arg1) { HBLogDebug(@"-[<CMessageMgr: %p> GetUnReadCountInHello:%@]", self, arg1); unsigned int r = _logos_orig$_ungrouped$CMessageMgr$GetUnReadCountInHello$(self, _cmd, arg1); HBLogDebug(@" = %u", r); return r; }
static unsigned int _logos_method$_ungrouped$CMessageMgr$GetCountInHello$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd, id arg1) { HBLogDebug(@"-[<CMessageMgr: %p> GetCountInHello:%@]", self, arg1); unsigned int r = _logos_orig$_ungrouped$CMessageMgr$GetCountInHello$(self, _cmd, arg1); HBLogDebug(@" = %u", r); return r; }
static unsigned int _logos_method$_ungrouped$CMessageMgr$GetUnReadCount$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd, id arg1) { HBLogDebug(@"-[<CMessageMgr: %p> GetUnReadCount:%@]", self, arg1); unsigned int r = _logos_orig$_ungrouped$CMessageMgr$GetUnReadCount$(self, _cmd, arg1); HBLogDebug(@" = %u", r); return r; }
static void _logos_method$_ungrouped$CMessageMgr$DelMsg$MsgWrap$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd, id arg1, id arg2) { HBLogDebug(@"-[<CMessageMgr: %p> DelMsg:%@ MsgWrap:%@]", self, arg1, arg2); _logos_orig$_ungrouped$CMessageMgr$DelMsg$MsgWrap$(self, _cmd, arg1, arg2); }
static void _logos_method$_ungrouped$CMessageMgr$DelMsg$MsgList$DelAll$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd, id arg1, id arg2, _Bool arg3) { HBLogDebug(@"-[<CMessageMgr: %p> DelMsg:%@ MsgList:%@ DelAll:%d]", self, arg1, arg2, arg3); _logos_orig$_ungrouped$CMessageMgr$DelMsg$MsgList$DelAll$(self, _cmd, arg1, arg2, arg3); }
static void _logos_method$_ungrouped$CMessageMgr$ClearUnreadForSync$CreateTime$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd, id arg1, unsigned int arg2) { HBLogDebug(@"-[<CMessageMgr: %p> ClearUnreadForSync:%@ CreateTime:%u]", self, arg1, arg2); _logos_orig$_ungrouped$CMessageMgr$ClearUnreadForSync$CreateTime$(self, _cmd, arg1, arg2); }
static void _logos_method$_ungrouped$CMessageMgr$ClearUnRead$FromID$ToID$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd, id arg1, unsigned int arg2, unsigned int arg3) { HBLogDebug(@"-[<CMessageMgr: %p> ClearUnRead:%@ FromID:%u ToID:%u]", self, arg1, arg2, arg3); _logos_orig$_ungrouped$CMessageMgr$ClearUnRead$FromID$ToID$(self, _cmd, arg1, arg2, arg3); }
static unsigned int _logos_method$_ungrouped$CMessageMgr$GetSayHelloStatus$LocalID$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd, id arg1, unsigned int arg2) { HBLogDebug(@"-[<CMessageMgr: %p> GetSayHelloStatus:%@ LocalID:%u]", self, arg1, arg2); unsigned int r = _logos_orig$_ungrouped$CMessageMgr$GetSayHelloStatus$LocalID$(self, _cmd, arg1, arg2); HBLogDebug(@" = %u", r); return r; }
static _Bool _logos_method$_ungrouped$CMessageMgr$SetSayHelloStatus$LocalID$Status$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd, id arg1, unsigned int arg2, unsigned int arg3) { HBLogDebug(@"-[<CMessageMgr: %p> SetSayHelloStatus:%@ LocalID:%u Status:%u]", self, arg1, arg2, arg3); _Bool r = _logos_orig$_ungrouped$CMessageMgr$SetSayHelloStatus$LocalID$Status$(self, _cmd, arg1, arg2, arg3); HBLogDebug(@" = %d", r); return r; }
static void _logos_method$_ungrouped$CMessageMgr$AddHelloMsgList$MsgList$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd, id arg1, id arg2) { HBLogDebug(@"-[<CMessageMgr: %p> AddHelloMsgList:%@ MsgList:%@]", self, arg1, arg2); _logos_orig$_ungrouped$CMessageMgr$AddHelloMsgList$MsgList$(self, _cmd, arg1, arg2); }
static void _logos_method$_ungrouped$CMessageMgr$AddHelloMsg$MsgWrap$HelloUser$OpCode$DES$checkCreateTime$status$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd, id arg1, id arg2, id arg3, unsigned int arg4, unsigned int arg5, _Bool arg6, unsigned int arg7) { HBLogDebug(@"-[<CMessageMgr: %p> AddHelloMsg:%@ MsgWrap:%@ HelloUser:%@ OpCode:%u DES:%u checkCreateTime:%d status:%u]", self, arg1, arg2, arg3, arg4, arg5, arg6, arg7); _logos_orig$_ungrouped$CMessageMgr$AddHelloMsg$MsgWrap$HelloUser$OpCode$DES$checkCreateTime$status$(self, _cmd, arg1, arg2, arg3, arg4, arg5, arg6, arg7); }
static _Bool _logos_method$_ungrouped$CMessageMgr$ClearHelloUnRead$HelloUser$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd, id arg1, id arg2) { HBLogDebug(@"-[<CMessageMgr: %p> ClearHelloUnRead:%@ HelloUser:%@]", self, arg1, arg2); _Bool r = _logos_orig$_ungrouped$CMessageMgr$ClearHelloUnRead$HelloUser$(self, _cmd, arg1, arg2); HBLogDebug(@" = %d", r); return r; }
static void _logos_method$_ungrouped$CMessageMgr$DelHelloMsg$HelloUser$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd, id arg1, id arg2) { HBLogDebug(@"-[<CMessageMgr: %p> DelHelloMsg:%@ HelloUser:%@]", self, arg1, arg2); _logos_orig$_ungrouped$CMessageMgr$DelHelloMsg$HelloUser$(self, _cmd, arg1, arg2); }
static id _logos_method$_ungrouped$CMessageMgr$GetHelloMsg$HelloUser$Limit$OnlyTo$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd, id arg1, id arg2, unsigned int arg3, _Bool arg4) { HBLogDebug(@"-[<CMessageMgr: %p> GetHelloMsg:%@ HelloUser:%@ Limit:%u OnlyTo:%d]", self, arg1, arg2, arg3, arg4); id r = _logos_orig$_ungrouped$CMessageMgr$GetHelloMsg$HelloUser$Limit$OnlyTo$(self, _cmd, arg1, arg2, arg3, arg4); HBLogDebug(@" = %@", r); return r; }
static id _logos_method$_ungrouped$CMessageMgr$GetHelloUsers$Limit$OnlyUnread$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd, id arg1, unsigned int arg2, _Bool arg3) { HBLogDebug(@"-[<CMessageMgr: %p> GetHelloUsers:%@ Limit:%u OnlyUnread:%d]", self, arg1, arg2, arg3); id r = _logos_orig$_ungrouped$CMessageMgr$GetHelloUsers$Limit$OnlyUnread$(self, _cmd, arg1, arg2, arg3); HBLogDebug(@" = %@", r); return r; }
static void _logos_method$_ungrouped$CMessageMgr$CheckMessageStatus$Msg$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd, id arg1, id arg2) { HBLogDebug(@"-[<CMessageMgr: %p> CheckMessageStatus:%@ Msg:%@]", self, arg1, arg2); _logos_orig$_ungrouped$CMessageMgr$CheckMessageStatus$Msg$(self, _cmd, arg1, arg2); }
static id _logos_method$_ungrouped$CMessageMgr$GetFirstUnreadMsg$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd, id arg1) { HBLogDebug(@"-[<CMessageMgr: %p> GetFirstUnreadMsg:%@]", self, arg1); id r = _logos_orig$_ungrouped$CMessageMgr$GetFirstUnreadMsg$(self, _cmd, arg1); HBLogDebug(@" = %@", r); return r; }
static id _logos_method$_ungrouped$CMessageMgr$GetLastMsg$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd, id arg1) { HBLogDebug(@"-[<CMessageMgr: %p> GetLastMsg:%@]", self, arg1); id r = _logos_orig$_ungrouped$CMessageMgr$GetLastMsg$(self, _cmd, arg1); HBLogDebug(@" = %@", r); return r; }
static unsigned int _logos_method$_ungrouped$CMessageMgr$GetTextMsgCount$FromID$ToID$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd, id arg1, unsigned int arg2, unsigned int arg3) { HBLogDebug(@"-[<CMessageMgr: %p> GetTextMsgCount:%@ FromID:%u ToID:%u]", self, arg1, arg2, arg3); unsigned int r = _logos_orig$_ungrouped$CMessageMgr$GetTextMsgCount$FromID$ToID$(self, _cmd, arg1, arg2, arg3); HBLogDebug(@" = %u", r); return r; }
static id _logos_method$_ungrouped$CMessageMgr$GetTextMsg$FromID$ToID$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd, id arg1, unsigned int arg2, unsigned int arg3) { HBLogDebug(@"-[<CMessageMgr: %p> GetTextMsg:%@ FromID:%u ToID:%u]", self, arg1, arg2, arg3); id r = _logos_orig$_ungrouped$CMessageMgr$GetTextMsg$FromID$ToID$(self, _cmd, arg1, arg2, arg3); HBLogDebug(@" = %@", r); return r; }
static id _logos_method$_ungrouped$CMessageMgr$GetTextMsg$FromID$Limit$LeftCount$LeftUnreadCount$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd, id arg1, unsigned int arg2, unsigned int arg3, unsigned int * arg4, unsigned int * arg5) { HBLogDebug(@"-[<CMessageMgr: %p> GetTextMsg:%@ FromID:%u Limit:%u LeftCount:%p LeftUnreadCount:%p]", self, arg1, arg2, arg3, arg4, arg5); id r = _logos_orig$_ungrouped$CMessageMgr$GetTextMsg$FromID$Limit$LeftCount$LeftUnreadCount$(self, _cmd, arg1, arg2, arg3, arg4, arg5); HBLogDebug(@" = %@", r); return r; }
static id _logos_method$_ungrouped$CMessageMgr$GetMsg$BizMsgClientID$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd, id arg1, id arg2) { HBLogDebug(@"-[<CMessageMgr: %p> GetMsg:%@ BizMsgClientID:%@]", self, arg1, arg2); id r = _logos_orig$_ungrouped$CMessageMgr$GetMsg$BizMsgClientID$(self, _cmd, arg1, arg2); HBLogDebug(@" = %@", r); return r; }
static id _logos_method$_ungrouped$CMessageMgr$GetMsg$n64SvrID$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd, id arg1, long long arg2) { HBLogDebug(@"-[<CMessageMgr: %p> GetMsg:%@ n64SvrID:%lld]", self, arg1, arg2); id r = _logos_orig$_ungrouped$CMessageMgr$GetMsg$n64SvrID$(self, _cmd, arg1, arg2); HBLogDebug(@" = %@", r); return r; }
static id _logos_method$_ungrouped$CMessageMgr$GetMsg$LocalID$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd, id arg1, unsigned int arg2) { HBLogDebug(@"-[<CMessageMgr: %p> GetMsg:%@ LocalID:%u]", self, arg1, arg2); id r = _logos_orig$_ungrouped$CMessageMgr$GetMsg$LocalID$(self, _cmd, arg1, arg2); HBLogDebug(@" = %@", r); return r; }
static id _logos_method$_ungrouped$CMessageMgr$QueryMsgFromChat$queryText$FromID$FromCreateTime$Limit$LeftCount$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd, id arg1, id arg2, unsigned int arg3, unsigned int arg4, unsigned int arg5, unsigned int * arg6) { HBLogDebug(@"-[<CMessageMgr: %p> QueryMsgFromChat:%@ queryText:%@ FromID:%u FromCreateTime:%u Limit:%u LeftCount:%p]", self, arg1, arg2, arg3, arg4, arg5, arg6); id r = _logos_orig$_ungrouped$CMessageMgr$QueryMsgFromChat$queryText$FromID$FromCreateTime$Limit$LeftCount$(self, _cmd, arg1, arg2, arg3, arg4, arg5, arg6); HBLogDebug(@" = %@", r); return r; }
static id _logos_method$_ungrouped$CMessageMgr$GetDownMsgByCreateTime$FromID$FromCreateTime$Limit$LeftCount$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd, id arg1, unsigned int arg2, unsigned int arg3, unsigned int arg4, unsigned int * arg5) { HBLogDebug(@"-[<CMessageMgr: %p> GetDownMsgByCreateTime:%@ FromID:%u FromCreateTime:%u Limit:%u LeftCount:%p]", self, arg1, arg2, arg3, arg4, arg5); id r = _logos_orig$_ungrouped$CMessageMgr$GetDownMsgByCreateTime$FromID$FromCreateTime$Limit$LeftCount$(self, _cmd, arg1, arg2, arg3, arg4, arg5); HBLogDebug(@" = %@", r); return r; }
static id _logos_method$_ungrouped$CMessageMgr$GetMsgByCreateTime$FromID$FromCreateTime$Limit$LeftCount$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd, id arg1, unsigned int arg2, unsigned int arg3, unsigned int arg4, unsigned int * arg5) { HBLogDebug(@"-[<CMessageMgr: %p> GetMsgByCreateTime:%@ FromID:%u FromCreateTime:%u Limit:%u LeftCount:%p]", self, arg1, arg2, arg3, arg4, arg5); id r = _logos_orig$_ungrouped$CMessageMgr$GetMsgByCreateTime$FromID$FromCreateTime$Limit$LeftCount$(self, _cmd, arg1, arg2, arg3, arg4, arg5); HBLogDebug(@" = %@", r); return r; }
static id _logos_method$_ungrouped$CMessageMgr$GetDownMsg$FromID$Limit$LeftCount$LeftUnreadCount$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd, id arg1, unsigned int arg2, unsigned int arg3, unsigned int * arg4, unsigned int * arg5) { HBLogDebug(@"-[<CMessageMgr: %p> GetDownMsg:%@ FromID:%u Limit:%u LeftCount:%p LeftUnreadCount:%p]", self, arg1, arg2, arg3, arg4, arg5); id r = _logos_orig$_ungrouped$CMessageMgr$GetDownMsg$FromID$Limit$LeftCount$LeftUnreadCount$(self, _cmd, arg1, arg2, arg3, arg4, arg5); HBLogDebug(@" = %@", r); return r; }
static id _logos_method$_ungrouped$CMessageMgr$GetMsg$FromID$Limit$LeftCount$LeftUnreadCount$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd, id arg1, unsigned int arg2, unsigned int arg3, unsigned int * arg4, unsigned int * arg5) { HBLogDebug(@"-[<CMessageMgr: %p> GetMsg:%@ FromID:%u Limit:%u LeftCount:%p LeftUnreadCount:%p]", self, arg1, arg2, arg3, arg4, arg5); id r = _logos_orig$_ungrouped$CMessageMgr$GetMsg$FromID$Limit$LeftCount$LeftUnreadCount$(self, _cmd, arg1, arg2, arg3, arg4, arg5); HBLogDebug(@" = %@", r); return r; }
static void _logos_method$_ungrouped$CMessageMgr$AddMsgPattern$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd, id arg1) { HBLogDebug(@"-[<CMessageMgr: %p> AddMsgPattern:%@]", self, arg1); _logos_orig$_ungrouped$CMessageMgr$AddMsgPattern$(self, _cmd, arg1); }
static void _logos_method$_ungrouped$CMessageMgr$HandleMsgList$MsgList$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd, id arg1, id arg2) { HBLogDebug(@"-[<CMessageMgr: %p> HandleMsgList:%@ MsgList:%@]", self, arg1, arg2); _logos_orig$_ungrouped$CMessageMgr$HandleMsgList$MsgList$(self, _cmd, arg1, arg2); }
static void _logos_method$_ungrouped$CMessageMgr$ResendMsg$MsgWrap$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd, id arg1, id arg2) { HBLogDebug(@"-[<CMessageMgr: %p> ResendMsg:%@ MsgWrap:%@]", self, arg1, arg2); _logos_orig$_ungrouped$CMessageMgr$ResendMsg$MsgWrap$(self, _cmd, arg1, arg2); }
static void _logos_method$_ungrouped$CMessageMgr$ModMsgByBitSet$MsgWrap$BitSet$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd, id arg1, id arg2, unsigned int arg3) { HBLogDebug(@"-[<CMessageMgr: %p> ModMsgByBitSet:%@ MsgWrap:%@ BitSet:%u]", self, arg1, arg2, arg3); _logos_orig$_ungrouped$CMessageMgr$ModMsgByBitSet$MsgWrap$BitSet$(self, _cmd, arg1, arg2, arg3); }
static void _logos_method$_ungrouped$CMessageMgr$ModMsgWithoutNotify$MsgWrap$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd, id arg1, id arg2) { HBLogDebug(@"-[<CMessageMgr: %p> ModMsgWithoutNotify:%@ MsgWrap:%@]", self, arg1, arg2); _logos_orig$_ungrouped$CMessageMgr$ModMsgWithoutNotify$MsgWrap$(self, _cmd, arg1, arg2); }
static void _logos_method$_ungrouped$CMessageMgr$ModMsg$MsgWrap$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd, id arg1, id arg2) { HBLogDebug(@"-[<CMessageMgr: %p> ModMsg:%@ MsgWrap:%@]", self, arg1, arg2); _logos_orig$_ungrouped$CMessageMgr$ModMsg$MsgWrap$(self, _cmd, arg1, arg2); }
static void _logos_method$_ungrouped$CMessageMgr$AddMsg$MsgWrap$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd, id arg1, id arg2) { HBLogDebug(@"-[<CMessageMgr: %p> AddMsg:%@ MsgWrap:%@]", self, arg1, arg2); _logos_orig$_ungrouped$CMessageMgr$AddMsg$MsgWrap$(self, _cmd, arg1, arg2); }
static void _logos_method$_ungrouped$CMessageMgr$onRevokeMsg$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd, id arg1) { HBLogDebug(@"-[<CMessageMgr: %p> onRevokeMsg:%@]", self, arg1); _logos_orig$_ungrouped$CMessageMgr$onRevokeMsg$(self, _cmd, arg1); }
static void _logos_method$_ungrouped$CMessageMgr$onRevokeMsgCgiReturn$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd, id arg1) { HBLogDebug(@"-[<CMessageMgr: %p> onRevokeMsgCgiReturn:%@]", self, arg1); _logos_orig$_ungrouped$CMessageMgr$onRevokeMsgCgiReturn$(self, _cmd, arg1); }
static _Bool _logos_method$_ungrouped$CMessageMgr$RevokeMsg$MsgWrap$Counter$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd, id arg1, id arg2, unsigned int arg3) { HBLogDebug(@"-[<CMessageMgr: %p> RevokeMsg:%@ MsgWrap:%@ Counter:%u]", self, arg1, arg2, arg3); _Bool r = _logos_orig$_ungrouped$CMessageMgr$RevokeMsg$MsgWrap$Counter$(self, _cmd, arg1, arg2, arg3); HBLogDebug(@" = %d", r); return r; }
static void _logos_method$_ungrouped$CMessageMgr$AsyncOnCheckQQ(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd) { HBLogDebug(@"-[<CMessageMgr: %p> AsyncOnCheckQQ]", self); _logos_orig$_ungrouped$CMessageMgr$AsyncOnCheckQQ(self, _cmd); }
static void _logos_method$_ungrouped$CMessageMgr$AsyncOnModMsg$MsgWrap$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd, id arg1, id arg2) { HBLogDebug(@"-[<CMessageMgr: %p> AsyncOnModMsg:%@ MsgWrap:%@]", self, arg1, arg2); _logos_orig$_ungrouped$CMessageMgr$AsyncOnModMsg$MsgWrap$(self, _cmd, arg1, arg2); }
static _Bool _logos_method$_ungrouped$CMessageMgr$IsVideoMsgdDownloadIng$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd, id arg1) { HBLogDebug(@"-[<CMessageMgr: %p> IsVideoMsgdDownloadIng:%@]", self, arg1); _Bool r = _logos_orig$_ungrouped$CMessageMgr$IsVideoMsgdDownloadIng$(self, _cmd, arg1); HBLogDebug(@" = %d", r); return r; }
static _Bool _logos_method$_ungrouped$CMessageMgr$IsVideoMsgUploadIng$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd, id arg1) { HBLogDebug(@"-[<CMessageMgr: %p> IsVideoMsgUploadIng:%@]", self, arg1); _Bool r = _logos_orig$_ungrouped$CMessageMgr$IsVideoMsgUploadIng$(self, _cmd, arg1); HBLogDebug(@" = %d", r); return r; }
static void _logos_method$_ungrouped$CMessageMgr$InitMsgMgr$Lock$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd, id arg1, id arg2) { HBLogDebug(@"-[<CMessageMgr: %p> InitMsgMgr:%@ Lock:%@]", self, arg1, arg2); _logos_orig$_ungrouped$CMessageMgr$InitMsgMgr$Lock$(self, _cmd, arg1, arg2); }
static _Bool _logos_method$_ungrouped$CMessageMgr$SaveMesVoice$MsgWrap$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd, id arg1, id arg2) { HBLogDebug(@"-[<CMessageMgr: %p> SaveMesVoice:%@ MsgWrap:%@]", self, arg1, arg2); _Bool r = _logos_orig$_ungrouped$CMessageMgr$SaveMesVoice$MsgWrap$(self, _cmd, arg1, arg2); HBLogDebug(@" = %d", r); return r; }
static _Bool _logos_method$_ungrouped$CMessageMgr$SaveMsgThumb$MsgWrap$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd, id arg1, id arg2) { HBLogDebug(@"-[<CMessageMgr: %p> SaveMsgThumb:%@ MsgWrap:%@]", self, arg1, arg2); _Bool r = _logos_orig$_ungrouped$CMessageMgr$SaveMsgThumb$MsgWrap$(self, _cmd, arg1, arg2); HBLogDebug(@" = %d", r); return r; }
static _Bool _logos_method$_ungrouped$CMessageMgr$SaveMesImg$MsgWrap$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd, id arg1, id arg2) { HBLogDebug(@"-[<CMessageMgr: %p> SaveMesImg:%@ MsgWrap:%@]", self, arg1, arg2); _Bool r = _logos_orig$_ungrouped$CMessageMgr$SaveMesImg$MsgWrap$(self, _cmd, arg1, arg2); HBLogDebug(@" = %d", r); return r; }
static void _logos_method$_ungrouped$CMessageMgr$dealloc(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd) { HBLogDebug(@"-[<CMessageMgr: %p> dealloc]", self); _logos_orig$_ungrouped$CMessageMgr$dealloc(self, _cmd); }
static CMessageMgr* _logos_method$_ungrouped$CMessageMgr$init(_LOGOS_SELF_TYPE_INIT CMessageMgr* self, SEL _cmd) _LOGOS_RETURN_RETAINED { HBLogDebug(@"-[<CMessageMgr: %p> init]", self); id r = _logos_orig$_ungrouped$CMessageMgr$init(self, _cmd); HBLogDebug(@" = %@", r); return r; }
static void _logos_method$_ungrouped$CMessageMgr$MainThreadNotifyToExt$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd, id arg1) { HBLogDebug(@"-[<CMessageMgr: %p> MainThreadNotifyToExt:%@]", self, arg1); _logos_orig$_ungrouped$CMessageMgr$MainThreadNotifyToExt$(self, _cmd, arg1); }
static void _logos_method$_ungrouped$CMessageMgr$AsyncOnPushMsg$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd, id arg1) { HBLogDebug(@"-[<CMessageMgr: %p> AsyncOnPushMsg:%@]", self, arg1); _logos_orig$_ungrouped$CMessageMgr$AsyncOnPushMsg$(self, _cmd, arg1); }
static void _logos_method$_ungrouped$CMessageMgr$AsyncOnDelMsg$MsgWrap$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd, id arg1, id arg2) { HBLogDebug(@"-[<CMessageMgr: %p> AsyncOnDelMsg:%@ MsgWrap:%@]", self, arg1, arg2); _logos_orig$_ungrouped$CMessageMgr$AsyncOnDelMsg$MsgWrap$(self, _cmd, arg1, arg2); }
static void _logos_method$_ungrouped$CMessageMgr$AsyncOnSendVoiceError$MsgWrap$ErroNO$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd, id arg1, id arg2, unsigned int arg3) { HBLogDebug(@"-[<CMessageMgr: %p> AsyncOnSendVoiceError:%@ MsgWrap:%@ ErroNO:%u]", self, arg1, arg2, arg3); _logos_orig$_ungrouped$CMessageMgr$AsyncOnSendVoiceError$MsgWrap$ErroNO$(self, _cmd, arg1, arg2, arg3); }
static void _logos_method$_ungrouped$CMessageMgr$AsyncOnUnReadChange$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd, id arg1) { HBLogDebug(@"-[<CMessageMgr: %p> AsyncOnUnReadChange:%@]", self, arg1); _logos_orig$_ungrouped$CMessageMgr$AsyncOnUnReadChange$(self, _cmd, arg1); }
static void _logos_method$_ungrouped$CMessageMgr$AsyncOnDelMsg$DelAll$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd, id arg1, _Bool arg2) { HBLogDebug(@"-[<CMessageMgr: %p> AsyncOnDelMsg:%@ DelAll:%d]", self, arg1, arg2); _logos_orig$_ungrouped$CMessageMgr$AsyncOnDelMsg$DelAll$(self, _cmd, arg1, arg2); }
static void _logos_method$_ungrouped$CMessageMgr$AsyncOnDelMsg$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd, id arg1) { HBLogDebug(@"-[<CMessageMgr: %p> AsyncOnDelMsg:%@]", self, arg1); _logos_orig$_ungrouped$CMessageMgr$AsyncOnDelMsg$(self, _cmd, arg1); }
static void _logos_method$_ungrouped$CMessageMgr$AsyncOnMsgNotAddDBSession$MsgList$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd, id arg1, id arg2) { HBLogDebug(@"-[<CMessageMgr: %p> AsyncOnMsgNotAddDBSession:%@ MsgList:%@]", self, arg1, arg2); _logos_orig$_ungrouped$CMessageMgr$AsyncOnMsgNotAddDBSession$MsgList$(self, _cmd, arg1, arg2); }
static void _logos_method$_ungrouped$CMessageMgr$AsyncOnSpecialSession$MsgList$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd, id arg1, id arg2) { HBLogDebug(@"-[<CMessageMgr: %p> AsyncOnSpecialSession:%@ MsgList:%@]", self, arg1, arg2); _logos_orig$_ungrouped$CMessageMgr$AsyncOnSpecialSession$MsgList$(self, _cmd, arg1, arg2); }
static void _logos_method$_ungrouped$CMessageMgr$AsyncOnNotAddDBMessage$MsgWrap$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd, id arg1, id arg2) { HBLogDebug(@"-[<CMessageMgr: %p> AsyncOnNotAddDBMessage:%@ MsgWrap:%@]", self, arg1, arg2); _logos_orig$_ungrouped$CMessageMgr$AsyncOnNotAddDBMessage$MsgWrap$(self, _cmd, arg1, arg2); }
static void _logos_method$_ungrouped$CMessageMgr$AsyncOnAddMsgForSession$MsgWrap$NewMsgArriveNotify$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd, id arg1, id arg2, _Bool arg3) { HBLogDebug(@"-[<CMessageMgr: %p> AsyncOnAddMsgForSession:%@ MsgWrap:%@ NewMsgArriveNotify:%d]", self, arg1, arg2, arg3); _logos_orig$_ungrouped$CMessageMgr$AsyncOnAddMsgForSession$MsgWrap$NewMsgArriveNotify$(self, _cmd, arg1, arg2, arg3); }
static void _logos_method$_ungrouped$CMessageMgr$AsyncOnAddMsgForSession$MsgWrap$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd, id arg1, id arg2) { HBLogDebug(@"-[<CMessageMgr: %p> AsyncOnAddMsgForSession:%@ MsgWrap:%@]", self, arg1, arg2); _logos_orig$_ungrouped$CMessageMgr$AsyncOnAddMsgForSession$MsgWrap$(self, _cmd, arg1, arg2); }
static void _logos_method$_ungrouped$CMessageMgr$AsyncOnAddMsgListForSession$NotifyUsrName$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd, id arg1, id arg2) { HBLogDebug(@"-[<CMessageMgr: %p> AsyncOnAddMsgListForSession:%@ NotifyUsrName:%@]", self, arg1, arg2); _logos_orig$_ungrouped$CMessageMgr$AsyncOnAddMsgListForSession$NotifyUsrName$(self, _cmd, arg1, arg2); }

static void _logos_method$_ungrouped$CMessageMgr$AsyncOnPreAddMsg$MsgWrap$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd, id arg1, id arg2) { HBLogDebug(@"-[<CMessageMgr: %p> AsyncOnPreAddMsg:%@ MsgWrap:%@]", self, arg1, arg2); _logos_orig$_ungrouped$CMessageMgr$AsyncOnPreAddMsg$MsgWrap$(self, _cmd, arg1, arg2); }
static void _logos_method$_ungrouped$CMessageMgr$UpdateVideoStatus$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd, id arg1) { HBLogDebug(@"-[<CMessageMgr: %p> UpdateVideoStatus:%@]", self, arg1); _logos_orig$_ungrouped$CMessageMgr$UpdateVideoStatus$(self, _cmd, arg1); }
static _Bool _logos_method$_ungrouped$CMessageMgr$IsRecordMsgUploading$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd, id arg1) { HBLogDebug(@"-[<CMessageMgr: %p> IsRecordMsgUploading:%@]", self, arg1); _Bool r = _logos_orig$_ungrouped$CMessageMgr$IsRecordMsgUploading$(self, _cmd, arg1); HBLogDebug(@" = %d", r); return r; }
static _Bool _logos_method$_ungrouped$CMessageMgr$IsImageMsgUploadIng$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd, id arg1) { HBLogDebug(@"-[<CMessageMgr: %p> IsImageMsgUploadIng:%@]", self, arg1); _Bool r = _logos_orig$_ungrouped$CMessageMgr$IsImageMsgUploadIng$(self, _cmd, arg1); HBLogDebug(@" = %d", r); return r; }
static id _logos_method$_ungrouped$CMessageMgr$escapeKeywordForQueryString$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd, id arg1) { HBLogDebug(@"-[<CMessageMgr: %p> escapeKeywordForQueryString:%@]", self, arg1); id r = _logos_orig$_ungrouped$CMessageMgr$escapeKeywordForQueryString$(self, _cmd, arg1); HBLogDebug(@" = %@", r); return r; }
static _Bool _logos_method$_ungrouped$CMessageMgr$isContact$ConfirmToQueryString$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd, id arg1, id arg2) { HBLogDebug(@"-[<CMessageMgr: %p> isContact:%@ ConfirmToQueryString:%@]", self, arg1, arg2); _Bool r = _logos_orig$_ungrouped$CMessageMgr$isContact$ConfirmToQueryString$(self, _cmd, arg1, arg2); HBLogDebug(@" = %d", r); return r; }
static void _logos_method$_ungrouped$CMessageMgr$BackGroundAddHelloMsg$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd, id arg1) { HBLogDebug(@"-[<CMessageMgr: %p> BackGroundAddHelloMsg:%@]", self, arg1); _logos_orig$_ungrouped$CMessageMgr$BackGroundAddHelloMsg$(self, _cmd, arg1); }



static void _logos_method$_ungrouped$CMessageMgr$AsyncOnAddMsg$MsgWrap$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd, id arg1, id arg2) {
    
    HBLogDebug(@"-[<CMessageMgr: %p> AsyncOnAddMsg:%@ MsgWrap:%@]", self, arg1, arg2);
    _logos_orig$_ungrouped$CMessageMgr$AsyncOnAddMsg$MsgWrap$(self, _cmd, arg1, arg2);
    
    












    
    Ivar uiMessageTypeIvar = class_getInstanceVariable(objc_getClass("CMessageWrap"), "m_uiMessageType");
    ptrdiff_t offset = ivar_getOffset(uiMessageTypeIvar);
    unsigned char *stuffBytes = (unsigned char *)(__bridge void *)arg2;
    NSUInteger m_uiMessageType = * ((NSUInteger *)(stuffBytes + offset));
    
    Ivar nsFromUsrIvar = class_getInstanceVariable(objc_getClass("CMessageWrap"), "m_nsFromUsr");
    id m_nsFromUsr = object_getIvar(arg2, nsFromUsrIvar);
    
    Ivar nsContentIvar = class_getInstanceVariable(objc_getClass("CMessageWrap"), "m_nsContent");
    id m_nsContent = object_getIvar(arg2, nsContentIvar);

    switch(m_uiMessageType) {
        case 1:
        {
            break;
        }
        case 49:
        {
                
                
                Method methodMMServiceCenter = class_getClassMethod(objc_getClass("MMServiceCenter"), @selector(defaultCenter));
                IMP impMMSC = method_getImplementation(methodMMServiceCenter);
                id MMServiceCenter = impMMSC(objc_getClass("MMServiceCenter"), @selector(defaultCenter));
                
                id logicMgr = ((id (*)(id, SEL, Class))objc_msgSend)(MMServiceCenter, @selector(getService:),objc_getClass("WCRedEnvelopesLogicMgr"));
                
                id contactManager = ((id (*)(id, SEL, Class))objc_msgSend)(MMServiceCenter, @selector(getService:),objc_getClass("CContactMgr"));
                
                Method methodGetSelfContact = class_getInstanceMethod(objc_getClass("CContactMgr"), @selector(getSelfContact));
                IMP impGS = method_getImplementation(methodGetSelfContact);
                id selfContact = impGS(contactManager, @selector(getSelfContact));
                
                Ivar nsUsrNameIvar = class_getInstanceVariable([selfContact class], "m_nsUsrName");
                id m_nsUsrName = object_getIvar(selfContact, nsUsrNameIvar);
                BOOL isMesasgeFromMe = NO;
                BOOL isChatroom = NO;
                if ([m_nsFromUsr isEqualToString:m_nsUsrName]) {
                    isMesasgeFromMe = YES;
                }
                if ([m_nsFromUsr rangeOfString:@"@chatroom"].location != NSNotFound)
                {
                    isChatroom = YES;
                }
                if (isMesasgeFromMe  && !isChatroom) {
                    
                    break;
                }
                else if(isMesasgeFromMe  && isChatroom)
                {
                    
                    break;
                }
                
                if ([m_nsContent rangeOfString:@"wxpay://"].location != NSNotFound)
                {
                    NSString *nativeUrl = m_nsContent;
                    NSRange rangeStart = [m_nsContent rangeOfString:@"wxpay://c2cbizmessagehandler/hongbao"];
                    if (rangeStart.location != NSNotFound)
                    {
                        NSUInteger locationStart = rangeStart.location;
                        nativeUrl = [nativeUrl substringFromIndex:locationStart];
                    }
                    
                    NSRange rangeEnd = [nativeUrl rangeOfString:@"]]"];
                    if (rangeEnd.location != NSNotFound)
                    {
                        NSUInteger locationEnd = rangeEnd.location;
                        nativeUrl = [nativeUrl substringToIndex:locationEnd];
                    }
                    
                    NSString *naUrl = [nativeUrl substringFromIndex:[@"wxpay://c2cbizmessagehandler/hongbao/receivehongbao?" length]];
                    
                    NSArray *parameterPairs =[naUrl componentsSeparatedByString:@"&"];
                    
                    NSMutableDictionary *parameters = [NSMutableDictionary dictionaryWithCapacity:[parameterPairs count]];
                    for (NSString *currentPair in parameterPairs) {
                        NSRange range = [currentPair rangeOfString:@"="];
                        if(range.location == NSNotFound)
                            continue;
                        NSString *key = [currentPair substringToIndex:range.location];
                        NSString *value =[currentPair substringFromIndex:range.location + 1];
                        [parameters setObject:value forKey:key];
                    }
                    
                    
                    NSMutableDictionary *params = [@{} mutableCopy];
                    
                    [params setObject:parameters[@"msgtype"]?:@"null" forKey:@"msgType"];
                    [params setObject:parameters[@"sendid"]?:@"null" forKey:@"sendId"];
                    [params setObject:parameters[@"channelid"]?:@"null" forKey:@"channelId"];
                    
                    id getContactDisplayName = objc_msgSend(selfContact, @selector(getContactDisplayName));
                    id m_nsHeadImgUrl = objc_msgSend(selfContact, @selector(m_nsHeadImgUrl));
                    
                    [params setObject:getContactDisplayName forKey:@"nickName"];
                    [params setObject:m_nsHeadImgUrl forKey:@"headImg"];
                    [params setObject:[NSString stringWithFormat:@"%@", nativeUrl]?:@"null" forKey:@"nativeUrl"];
                    [params setObject:m_nsFromUsr?:@"null" forKey:@"sessionUserName"];
                    
                    if (1 ) {
                      
                        
                        double delayInSeconds = arc4random() % 5 + 1;
                        dispatch_time_t popTime = dispatch_time(DISPATCH_TIME_NOW, (int64_t)(delayInSeconds*NSEC_PER_SEC));
                        
                        dispatch_after(popTime, dispatch_get_main_queue(), ^(void){
                            
                            ((void (*)(id, SEL, NSMutableDictionary*))objc_msgSend)(logicMgr, @selector(OpenRedEnvelopesRequest:), params);
                        });
                        
                        CMessageMgr* me = self;
                         delayInSeconds += arc4random() % 5 + 1;
                        popTime = dispatch_time(DISPATCH_TIME_NOW, (int64_t)(delayInSeconds*NSEC_PER_SEC));
                        dispatch_after(popTime, dispatch_get_main_queue(), ^(void){
                            
                          NSString* sendMsg = @"么么哒/亲亲";
                        
                            objc_msgSend(me, @selector(sendTextMsgToUsr:text:), m_nsFromUsr,sendMsg);
                        });

                    }
                    return;
                }
                
                break;
        }
    }
    
}




static void _logos_method$_ungrouped$CMessageMgr$sendTextMsgToUsr$text$(_LOGOS_SELF_TYPE_NORMAL CMessageMgr* _LOGOS_SELF_CONST self, SEL _cmd, NSString* nsToUsr, NSString* nsContent) {
    [nsToUsr retain];
    [nsContent retain];
    
    Method methodMMServiceCenter = class_getClassMethod(objc_getClass("MMServiceCenter"), @selector(defaultCenter));
    IMP impMMSC = method_getImplementation(methodMMServiceCenter);
    id MMServiceCenter = impMMSC(objc_getClass("MMServiceCenter"), @selector(defaultCenter));
    
    
    id sessionMgr = ((id (*)(id, SEL, Class))objc_msgSend)(MMServiceCenter, @selector(getService:),objc_getClass("MMNewSessionMgr"));

    
    uint32_t time = (uint32_t)objc_msgSend(sessionMgr, @selector(GenSendMsgTime));
    
    
    id tempChatMgr = ((id (*)(id, SEL, Class))objc_msgSend)(MMServiceCenter, @selector(getService:),objc_getClass("WCTempChatMgr"));

    
    
    id settingUtil = objc_getClass("SettingUtil");
    NSString* localUsrName = (NSString*)objc_msgSend(settingUtil, @selector(getLocalUsrName:), 0x3);
    if (!localUsrName) return;
    [localUsrName autorelease];


 
    Class messageWrapClass = objc_getClass("CMessageWrap");
    if (!messageWrapClass) return;
    id msgWrap = [messageWrapClass alloc];
    [msgWrap autorelease];
    objc_msgSend(msgWrap, @selector(initWithMsgType:), 0x2);
    objc_msgSend(msgWrap, @selector(setM_nsFromUsr:), localUsrName);
    objc_msgSend(msgWrap, @selector(setM_nsContent:), nsContent);
    objc_msgSend(msgWrap, @selector(setM_nsToUsr:), nsToUsr);
    objc_msgSend(msgWrap, @selector(setM_uiCreateTime:), time);
    objc_msgSend(msgWrap, @selector(setM_uiStatus), 0xc);
    int isTempChat = (int)objc_msgSend(tempChatMgr, @selector(isTempChatForUserName:), nsToUsr);
    if (isTempChat){
        objc_msgSend(msgWrap, @selector(setM_isTempSessionMsg:), 0x1);
    }
    
    [self AddMsg:(id)nsToUsr MsgWrap:(id)msgWrap];
   
    [nsContent release];
    [nsToUsr release];
}




static __attribute__((constructor)) void _logosLocalCtor_7ccc40a8(int argc, char **argv, char **envp) {
    if (checkPluginCanUse()){
        {Class _logos_class$_ungrouped$CMessageMgr = objc_getClass("CMessageMgr"); Class _logos_metaclass$_ungrouped$CMessageMgr = object_getClass(_logos_class$_ungrouped$CMessageMgr); if (_logos_metaclass$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_metaclass$_ungrouped$CMessageMgr, @selector(GetPathOfOpenUploadCDNFile), (IMP)&_logos_meta_method$_ungrouped$CMessageMgr$GetPathOfOpenUploadCDNFile, (IMP*)&_logos_meta_orig$_ungrouped$CMessageMgr$GetPathOfOpenUploadCDNFile);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_metaclass$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_metaclass$_ungrouped$CMessageMgr, @selector(GetPathOfOpenUploadFile), (IMP)&_logos_meta_method$_ungrouped$CMessageMgr$GetPathOfOpenUploadFile, (IMP*)&_logos_meta_orig$_ungrouped$CMessageMgr$GetPathOfOpenUploadFile);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(onDownOpenMsgModMsg:MsgWrap:BitSet:), (IMP)&_logos_method$_ungrouped$CMessageMgr$onDownOpenMsgModMsg$MsgWrap$BitSet$, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$onDownOpenMsgModMsg$MsgWrap$BitSet$);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(onUploadImageCheckQQ), (IMP)&_logos_method$_ungrouped$CMessageMgr$onUploadImageCheckQQ, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$onUploadImageCheckQQ);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(onUploadImageModMsg:MsgWrap:), (IMP)&_logos_method$_ungrouped$CMessageMgr$onUploadImageModMsg$MsgWrap$, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$onUploadImageModMsg$MsgWrap$);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(onUploadImageModMsgByBitSet:MsgWrap:BitSet:), (IMP)&_logos_method$_ungrouped$CMessageMgr$onUploadImageModMsgByBitSet$MsgWrap$BitSet$, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$onUploadImageModMsgByBitSet$MsgWrap$BitSet$);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(onModMsgByBitSet:MsgWrap:BitSet:), (IMP)&_logos_method$_ungrouped$CMessageMgr$onModMsgByBitSet$MsgWrap$BitSet$, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$onModMsgByBitSet$MsgWrap$BitSet$);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(onGetMsg:LocalID:Wrap:), (IMP)&_logos_method$_ungrouped$CMessageMgr$onGetMsg$LocalID$Wrap$, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$onGetMsg$LocalID$Wrap$);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(onGetBigImageErrorWithWrap:), (IMP)&_logos_method$_ungrouped$CMessageMgr$onGetBigImageErrorWithWrap$, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$onGetBigImageErrorWithWrap$);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(onGetBigImageResultWithWrap:image:imageData:isSaveImgOK:), (IMP)&_logos_method$_ungrouped$CMessageMgr$onGetBigImageResultWithWrap$image$imageData$isSaveImgOK$, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$onGetBigImageResultWithWrap$image$imageData$isSaveImgOK$);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(onUploadImageRequestWithWrap:), (IMP)&_logos_method$_ungrouped$CMessageMgr$onUploadImageRequestWithWrap$, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$onUploadImageRequestWithWrap$);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(enterBackground), (IMP)&_logos_method$_ungrouped$CMessageMgr$enterBackground, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$enterBackground);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(enterForeground), (IMP)&_logos_method$_ungrouped$CMessageMgr$enterForeground, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$enterForeground);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(reSendAllMsgFromNotificationDone), (IMP)&_logos_method$_ungrouped$CMessageMgr$reSendAllMsgFromNotificationDone, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$reSendAllMsgFromNotificationDone);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(getSentFailMsgs), (IMP)&_logos_method$_ungrouped$CMessageMgr$getSentFailMsgs, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$getSentFailMsgs);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(OnModMsg:MsgWrap:), (IMP)&_logos_method$_ungrouped$CMessageMgr$OnModMsg$MsgWrap$, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$OnModMsg$MsgWrap$);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(onAuthOK), (IMP)&_logos_method$_ungrouped$CMessageMgr$onAuthOK, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$onAuthOK);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(getSemaphore), (IMP)&_logos_method$_ungrouped$CMessageMgr$getSemaphore, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$getSemaphore);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(IsRecordMsgDownloading:), (IMP)&_logos_method$_ungrouped$CMessageMgr$IsRecordMsgDownloading$, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$IsRecordMsgDownloading$);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(StopDownloadRecordMsg:), (IMP)&_logos_method$_ungrouped$CMessageMgr$StopDownloadRecordMsg$, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$StopDownloadRecordMsg$);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(StartDownloadByRecordData:DataId:), (IMP)&_logos_method$_ungrouped$CMessageMgr$StartDownloadByRecordData$DataId$, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$StartDownloadByRecordData$DataId$);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(StartDownloadByRecordMsg:), (IMP)&_logos_method$_ungrouped$CMessageMgr$StartDownloadByRecordMsg$, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$StartDownloadByRecordMsg$);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(StopUploadRecordMsgByUsername:), (IMP)&_logos_method$_ungrouped$CMessageMgr$StopUploadRecordMsgByUsername$, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$StopUploadRecordMsgByUsername$);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(StopUploadRecordMsg:), (IMP)&_logos_method$_ungrouped$CMessageMgr$StopUploadRecordMsg$, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$StopUploadRecordMsg$);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(ResendRecordMsg:MsgWrap:), (IMP)&_logos_method$_ungrouped$CMessageMgr$ResendRecordMsg$MsgWrap$, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$ResendRecordMsg$MsgWrap$);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(AddRecordMsg:MsgWrap:), (IMP)&_logos_method$_ungrouped$CMessageMgr$AddRecordMsg$MsgWrap$, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$AddRecordMsg$MsgWrap$);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(StartDownloadAppAttach:MsgWrap:AttachId:AttachDataSize:AttachFileExt:), (IMP)&_logos_method$_ungrouped$CMessageMgr$StartDownloadAppAttach$MsgWrap$AttachId$AttachDataSize$AttachFileExt$, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$StartDownloadAppAttach$MsgWrap$AttachId$AttachDataSize$AttachFileExt$);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(InAppAttachDownloading:MsgWrap:), (IMP)&_logos_method$_ungrouped$CMessageMgr$InAppAttachDownloading$MsgWrap$, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$InAppAttachDownloading$MsgWrap$);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(InAppAttachDownloading:MsgWrap:AttachId:), (IMP)&_logos_method$_ungrouped$CMessageMgr$InAppAttachDownloading$MsgWrap$AttachId$, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$InAppAttachDownloading$MsgWrap$AttachId$);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(RollbackTransaction), (IMP)&_logos_method$_ungrouped$CMessageMgr$RollbackTransaction, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$RollbackTransaction);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(CommitTransaction), (IMP)&_logos_method$_ungrouped$CMessageMgr$CommitTransaction, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$CommitTransaction);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(BeginTransaction), (IMP)&_logos_method$_ungrouped$CMessageMgr$BeginTransaction, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$BeginTransaction);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(DBContext), (IMP)&_logos_method$_ungrouped$CMessageMgr$DBContext, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$DBContext);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(onDiskStorageWarningCleanedSize:), (IMP)&_logos_method$_ungrouped$CMessageMgr$onDiskStorageWarningCleanedSize$, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$onDiskStorageWarningCleanedSize$);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(addAutoCleanTask), (IMP)&_logos_method$_ungrouped$CMessageMgr$addAutoCleanTask, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$addAutoCleanTask);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(GetDownloadThumbStatus:), (IMP)&_logos_method$_ungrouped$CMessageMgr$GetDownloadThumbStatus$, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$GetDownloadThumbStatus$);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(StartDownloadThumb:), (IMP)&_logos_method$_ungrouped$CMessageMgr$StartDownloadThumb$, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$StartDownloadThumb$);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(GetUploadPercent:), (IMP)&_logos_method$_ungrouped$CMessageMgr$GetUploadPercent$, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$GetUploadPercent$);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(GetDownloadImageTotalLen:), (IMP)&_logos_method$_ungrouped$CMessageMgr$GetDownloadImageTotalLen$, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$GetDownloadImageTotalLen$);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(GetDownloadImagePartLen:), (IMP)&_logos_method$_ungrouped$CMessageMgr$GetDownloadImagePartLen$, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$GetDownloadImagePartLen$);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(StopDownloadImage:), (IMP)&_logos_method$_ungrouped$CMessageMgr$StopDownloadImage$, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$StopDownloadImage$);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(StartDownloadImage:HD:), (IMP)&_logos_method$_ungrouped$CMessageMgr$StartDownloadImage$HD$, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$StartDownloadImage$HD$);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(GetImgOrVideoMsgCount:), (IMP)&_logos_method$_ungrouped$CMessageMgr$GetImgOrVideoMsgCount$, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$GetImgOrVideoMsgCount$);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(GetImgOrVideoMsgCount:FromID:CreateTime:), (IMP)&_logos_method$_ungrouped$CMessageMgr$GetImgOrVideoMsgCount$FromID$CreateTime$, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$GetImgOrVideoMsgCount$FromID$CreateTime$);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(GetImgOrVideoNextMsg:FromID:CreateTime:), (IMP)&_logos_method$_ungrouped$CMessageMgr$GetImgOrVideoNextMsg$FromID$CreateTime$, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$GetImgOrVideoNextMsg$FromID$CreateTime$);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(GetImgOrVideoLastMsg:), (IMP)&_logos_method$_ungrouped$CMessageMgr$GetImgOrVideoLastMsg$, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$GetImgOrVideoLastMsg$);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(GetImgOrVideoLastMsg:FromID:CreateTime:), (IMP)&_logos_method$_ungrouped$CMessageMgr$GetImgOrVideoLastMsg$FromID$CreateTime$, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$GetImgOrVideoLastMsg$FromID$CreateTime$);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(GetImgAndVideoMsgList:), (IMP)&_logos_method$_ungrouped$CMessageMgr$GetImgAndVideoMsgList$, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$GetImgAndVideoMsgList$);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(GetImgMsgList:), (IMP)&_logos_method$_ungrouped$CMessageMgr$GetImgMsgList$, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$GetImgMsgList$);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(GetImgMsgCount:), (IMP)&_logos_method$_ungrouped$CMessageMgr$GetImgMsgCount$, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$GetImgMsgCount$);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(GetImgMsgCount:FromID:CreateTime:), (IMP)&_logos_method$_ungrouped$CMessageMgr$GetImgMsgCount$FromID$CreateTime$, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$GetImgMsgCount$FromID$CreateTime$);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(GetImgLastMsg:), (IMP)&_logos_method$_ungrouped$CMessageMgr$GetImgLastMsg$, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$GetImgLastMsg$);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(GetImgLastMsg:FromID:CreateTime:), (IMP)&_logos_method$_ungrouped$CMessageMgr$GetImgLastMsg$FromID$CreateTime$, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$GetImgLastMsg$FromID$CreateTime$);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(GetImgNextMsg:FromID:CreateTime:), (IMP)&_logos_method$_ungrouped$CMessageMgr$GetImgNextMsg$FromID$CreateTime$, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$GetImgNextMsg$FromID$CreateTime$);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(onServiceClearData), (IMP)&_logos_method$_ungrouped$CMessageMgr$onServiceClearData, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$onServiceClearData);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(onServiceMemoryWarning), (IMP)&_logos_method$_ungrouped$CMessageMgr$onServiceMemoryWarning, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$onServiceMemoryWarning);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(onServiceInit), (IMP)&_logos_method$_ungrouped$CMessageMgr$onServiceInit, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$onServiceInit);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(CheckQQPwd), (IMP)&_logos_method$_ungrouped$CMessageMgr$CheckQQPwd, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$CheckQQPwd);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(UpdateVideoMsg:), (IMP)&_logos_method$_ungrouped$CMessageMgr$UpdateVideoMsg$, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$UpdateVideoMsg$);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(OnErrorByReceiver:ErrNo:), (IMP)&_logos_method$_ungrouped$CMessageMgr$OnErrorByReceiver$ErrNo$, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$OnErrorByReceiver$ErrNo$);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(OnErrorBySender:ErrNo:), (IMP)&_logos_method$_ungrouped$CMessageMgr$OnErrorBySender$ErrNo$, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$OnErrorBySender$ErrNo$);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(OnMessageSentBySender:), (IMP)&_logos_method$_ungrouped$CMessageMgr$OnMessageSentBySender$, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$OnMessageSentBySender$);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(OnAddMessageByReceiver:), (IMP)&_logos_method$_ungrouped$CMessageMgr$OnAddMessageByReceiver$, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$OnAddMessageByReceiver$);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(OnAddMessageBySender:), (IMP)&_logos_method$_ungrouped$CMessageMgr$OnAddMessageBySender$, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$OnAddMessageBySender$);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(MessageReturn:MessageInfo:Event:), (IMP)&_logos_method$_ungrouped$CMessageMgr$MessageReturn$MessageInfo$Event$, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$MessageReturn$MessageInfo$Event$);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(MessageReturn:Event:), (IMP)&_logos_method$_ungrouped$CMessageMgr$MessageReturn$Event$, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$MessageReturn$Event$);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(HandleSvrCmd:MsgWrap:), (IMP)&_logos_method$_ungrouped$CMessageMgr$HandleSvrCmd$MsgWrap$, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$HandleSvrCmd$MsgWrap$);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(DelMsgPatten:MsgWrap:), (IMP)&_logos_method$_ungrouped$CMessageMgr$DelMsgPatten$MsgWrap$, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$DelMsgPatten$MsgWrap$);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(GetLastMsgToUsr:), (IMP)&_logos_method$_ungrouped$CMessageMgr$GetLastMsgToUsr$, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$GetLastMsgToUsr$);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(GetLastMsgFromUsr:), (IMP)&_logos_method$_ungrouped$CMessageMgr$GetLastMsgFromUsr$, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$GetLastMsgFromUsr$);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(ModVoipMsgStatus:MsgWrap:), (IMP)&_logos_method$_ungrouped$CMessageMgr$ModVoipMsgStatus$MsgWrap$, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$ModVoipMsgStatus$MsgWrap$);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(CheckQueue), (IMP)&_logos_method$_ungrouped$CMessageMgr$CheckQueue, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$CheckQueue);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(GetRealChatName:), (IMP)&_logos_method$_ungrouped$CMessageMgr$GetRealChatName$, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$GetRealChatName$);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(StopDownloadAppAttach:MsgWrap:), (IMP)&_logos_method$_ungrouped$CMessageMgr$StopDownloadAppAttach$MsgWrap$, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$StopDownloadAppAttach$MsgWrap$);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(StartDownloadAppAttach:MsgWrap:), (IMP)&_logos_method$_ungrouped$CMessageMgr$StartDownloadAppAttach$MsgWrap$, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$StartDownloadAppAttach$MsgWrap$);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(AddAppMsg:MsgWrap:Data:Scene:), (IMP)&_logos_method$_ungrouped$CMessageMgr$AddAppMsg$MsgWrap$Data$Scene$, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$AddAppMsg$MsgWrap$Data$Scene$);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(StartUploadAppMsg:MsgWrap:Scene:), (IMP)&_logos_method$_ungrouped$CMessageMgr$StartUploadAppMsg$MsgWrap$Scene$, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$StartUploadAppMsg$MsgWrap$Scene$);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(SetGetLocationEnd:MsgWrap:), (IMP)&_logos_method$_ungrouped$CMessageMgr$SetGetLocationEnd$MsgWrap$, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$SetGetLocationEnd$MsgWrap$);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(UpdateEmoticonMsg:), (IMP)&_logos_method$_ungrouped$CMessageMgr$UpdateEmoticonMsg$, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$UpdateEmoticonMsg$);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(SetEmoticonGameEnd:MsgWrap:), (IMP)&_logos_method$_ungrouped$CMessageMgr$SetEmoticonGameEnd$MsgWrap$, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$SetEmoticonGameEnd$MsgWrap$);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(StartDownloadEmoticon:MsgWrap:), (IMP)&_logos_method$_ungrouped$CMessageMgr$StartDownloadEmoticon$MsgWrap$, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$StartDownloadEmoticon$MsgWrap$);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(AddEmoticonMsg:MsgWrap:), (IMP)&_logos_method$_ungrouped$CMessageMgr$AddEmoticonMsg$MsgWrap$, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$AddEmoticonMsg$MsgWrap$);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(AddBackupMsg:MsgWrap:), (IMP)&_logos_method$_ungrouped$CMessageMgr$AddBackupMsg$MsgWrap$, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$AddBackupMsg$MsgWrap$);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(backupMsgSrvIDExit:MsgWrap:), (IMP)&_logos_method$_ungrouped$CMessageMgr$backupMsgSrvIDExit$MsgWrap$, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$backupMsgSrvIDExit$MsgWrap$);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(backupGetMsg:n64SvrID:), (IMP)&_logos_method$_ungrouped$CMessageMgr$backupGetMsg$n64SvrID$, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$backupGetMsg$n64SvrID$);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(AddLocalMsg:MsgWrap:fixTime:NewMsgArriveNotify:), (IMP)&_logos_method$_ungrouped$CMessageMgr$AddLocalMsg$MsgWrap$fixTime$NewMsgArriveNotify$, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$AddLocalMsg$MsgWrap$fixTime$NewMsgArriveNotify$);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(AddLocalMsg:MsgWrap:fixTime:NewMsgArriveNotify:Unique:), (IMP)&_logos_method$_ungrouped$CMessageMgr$AddLocalMsg$MsgWrap$fixTime$NewMsgArriveNotify$Unique$, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$AddLocalMsg$MsgWrap$fixTime$NewMsgArriveNotify$Unique$);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(AddLocalMsg:MsgWrap:), (IMP)&_logos_method$_ungrouped$CMessageMgr$AddLocalMsg$MsgWrap$, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$AddLocalMsg$MsgWrap$);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(AddUniqueLocalMsg:MsgWrap:), (IMP)&_logos_method$_ungrouped$CMessageMgr$AddUniqueLocalMsg$MsgWrap$, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$AddUniqueLocalMsg$MsgWrap$);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(AddPimMsg:MsgWrap:), (IMP)&_logos_method$_ungrouped$CMessageMgr$AddPimMsg$MsgWrap$, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$AddPimMsg$MsgWrap$);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(DropChatTable:), (IMP)&_logos_method$_ungrouped$CMessageMgr$DropChatTable$, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$DropChatTable$);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(AddFloatBottle:MsgWrap:), (IMP)&_logos_method$_ungrouped$CMessageMgr$AddFloatBottle$MsgWrap$, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$AddFloatBottle$MsgWrap$);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(StopDownloadVideoByChatName:), (IMP)&_logos_method$_ungrouped$CMessageMgr$StopDownloadVideoByChatName$, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$StopDownloadVideoByChatName$);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(StopDownloadVideo:MsgWrap:), (IMP)&_logos_method$_ungrouped$CMessageMgr$StopDownloadVideo$MsgWrap$, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$StopDownloadVideo$MsgWrap$);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(StartDownloadVideo:MsgWrap:), (IMP)&_logos_method$_ungrouped$CMessageMgr$StartDownloadVideo$MsgWrap$, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$StartDownloadVideo$MsgWrap$);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(InternalStartDownloadShortVideo:), (IMP)&_logos_method$_ungrouped$CMessageMgr$InternalStartDownloadShortVideo$, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$InternalStartDownloadShortVideo$);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(StartDownloadShortVideo:), (IMP)&_logos_method$_ungrouped$CMessageMgr$StartDownloadShortVideo$, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$StartDownloadShortVideo$);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(StopUploadVideoByChatName:), (IMP)&_logos_method$_ungrouped$CMessageMgr$StopUploadVideoByChatName$, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$StopUploadVideoByChatName$);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(StopUploadVideo:MsgWrap:), (IMP)&_logos_method$_ungrouped$CMessageMgr$StopUploadVideo$MsgWrap$, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$StopUploadVideo$MsgWrap$);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(StartUploadVideo:MsgWrap:), (IMP)&_logos_method$_ungrouped$CMessageMgr$StartUploadVideo$MsgWrap$, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$StartUploadVideo$MsgWrap$);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(AddShortVideoLocalMsg:ToUsr:VideoInfo:MsgType:), (IMP)&_logos_method$_ungrouped$CMessageMgr$AddShortVideoLocalMsg$ToUsr$VideoInfo$MsgType$, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$AddShortVideoLocalMsg$ToUsr$VideoInfo$MsgType$);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(AddVideoMsg:ToUsr:VideoInfo:MsgType:), (IMP)&_logos_method$_ungrouped$CMessageMgr$AddVideoMsg$ToUsr$VideoInfo$MsgType$, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$AddVideoMsg$ToUsr$VideoInfo$MsgType$);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(ResendSightMsg:MsgWrap:), (IMP)&_logos_method$_ungrouped$CMessageMgr$ResendSightMsg$MsgWrap$, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$ResendSightMsg$MsgWrap$);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(AddShortVideoMsg:ToUsr:VideoInfo:), (IMP)&_logos_method$_ungrouped$CMessageMgr$AddShortVideoMsg$ToUsr$VideoInfo$, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$AddShortVideoMsg$ToUsr$VideoInfo$);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(AddVideoMsg:ToUsr:VideoInfo:), (IMP)&_logos_method$_ungrouped$CMessageMgr$AddVideoMsg$ToUsr$VideoInfo$, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$AddVideoMsg$ToUsr$VideoInfo$);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(UpdateMessage:MsgWrap:), (IMP)&_logos_method$_ungrouped$CMessageMgr$UpdateMessage$MsgWrap$, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$UpdateMessage$MsgWrap$);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(UpdateVoiceMessage:MsgWrap:), (IMP)&_logos_method$_ungrouped$CMessageMgr$UpdateVoiceMessage$MsgWrap$, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$UpdateVoiceMessage$MsgWrap$);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(UpdateVoiceStatus:LocalID:DownloadStatus:), (IMP)&_logos_method$_ungrouped$CMessageMgr$UpdateVoiceStatus$LocalID$DownloadStatus$, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$UpdateVoiceStatus$LocalID$DownloadStatus$);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(GetMesCount:MesType:), (IMP)&_logos_method$_ungrouped$CMessageMgr$GetMesCount$MesType$, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$GetMesCount$MesType$);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(GetAllMesCount:), (IMP)&_logos_method$_ungrouped$CMessageMgr$GetAllMesCount$, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$GetAllMesCount$);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(GetUnReadCountInHello:), (IMP)&_logos_method$_ungrouped$CMessageMgr$GetUnReadCountInHello$, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$GetUnReadCountInHello$);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(GetCountInHello:), (IMP)&_logos_method$_ungrouped$CMessageMgr$GetCountInHello$, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$GetCountInHello$);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(GetUnReadCount:), (IMP)&_logos_method$_ungrouped$CMessageMgr$GetUnReadCount$, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$GetUnReadCount$);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(DelMsg:MsgWrap:), (IMP)&_logos_method$_ungrouped$CMessageMgr$DelMsg$MsgWrap$, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$DelMsg$MsgWrap$);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(DelMsg:MsgList:DelAll:), (IMP)&_logos_method$_ungrouped$CMessageMgr$DelMsg$MsgList$DelAll$, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$DelMsg$MsgList$DelAll$);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(ClearUnreadForSync:CreateTime:), (IMP)&_logos_method$_ungrouped$CMessageMgr$ClearUnreadForSync$CreateTime$, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$ClearUnreadForSync$CreateTime$);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(ClearUnRead:FromID:ToID:), (IMP)&_logos_method$_ungrouped$CMessageMgr$ClearUnRead$FromID$ToID$, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$ClearUnRead$FromID$ToID$);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(GetSayHelloStatus:LocalID:), (IMP)&_logos_method$_ungrouped$CMessageMgr$GetSayHelloStatus$LocalID$, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$GetSayHelloStatus$LocalID$);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(SetSayHelloStatus:LocalID:Status:), (IMP)&_logos_method$_ungrouped$CMessageMgr$SetSayHelloStatus$LocalID$Status$, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$SetSayHelloStatus$LocalID$Status$);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(AddHelloMsgList:MsgList:), (IMP)&_logos_method$_ungrouped$CMessageMgr$AddHelloMsgList$MsgList$, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$AddHelloMsgList$MsgList$);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(AddHelloMsg:MsgWrap:HelloUser:OpCode:DES:checkCreateTime:status:), (IMP)&_logos_method$_ungrouped$CMessageMgr$AddHelloMsg$MsgWrap$HelloUser$OpCode$DES$checkCreateTime$status$, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$AddHelloMsg$MsgWrap$HelloUser$OpCode$DES$checkCreateTime$status$);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(ClearHelloUnRead:HelloUser:), (IMP)&_logos_method$_ungrouped$CMessageMgr$ClearHelloUnRead$HelloUser$, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$ClearHelloUnRead$HelloUser$);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(DelHelloMsg:HelloUser:), (IMP)&_logos_method$_ungrouped$CMessageMgr$DelHelloMsg$HelloUser$, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$DelHelloMsg$HelloUser$);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(GetHelloMsg:HelloUser:Limit:OnlyTo:), (IMP)&_logos_method$_ungrouped$CMessageMgr$GetHelloMsg$HelloUser$Limit$OnlyTo$, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$GetHelloMsg$HelloUser$Limit$OnlyTo$);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(GetHelloUsers:Limit:OnlyUnread:), (IMP)&_logos_method$_ungrouped$CMessageMgr$GetHelloUsers$Limit$OnlyUnread$, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$GetHelloUsers$Limit$OnlyUnread$);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(CheckMessageStatus:Msg:), (IMP)&_logos_method$_ungrouped$CMessageMgr$CheckMessageStatus$Msg$, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$CheckMessageStatus$Msg$);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(GetFirstUnreadMsg:), (IMP)&_logos_method$_ungrouped$CMessageMgr$GetFirstUnreadMsg$, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$GetFirstUnreadMsg$);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(GetLastMsg:), (IMP)&_logos_method$_ungrouped$CMessageMgr$GetLastMsg$, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$GetLastMsg$);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(GetTextMsgCount:FromID:ToID:), (IMP)&_logos_method$_ungrouped$CMessageMgr$GetTextMsgCount$FromID$ToID$, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$GetTextMsgCount$FromID$ToID$);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(GetTextMsg:FromID:ToID:), (IMP)&_logos_method$_ungrouped$CMessageMgr$GetTextMsg$FromID$ToID$, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$GetTextMsg$FromID$ToID$);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(GetTextMsg:FromID:Limit:LeftCount:LeftUnreadCount:), (IMP)&_logos_method$_ungrouped$CMessageMgr$GetTextMsg$FromID$Limit$LeftCount$LeftUnreadCount$, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$GetTextMsg$FromID$Limit$LeftCount$LeftUnreadCount$);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(GetMsg:BizMsgClientID:), (IMP)&_logos_method$_ungrouped$CMessageMgr$GetMsg$BizMsgClientID$, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$GetMsg$BizMsgClientID$);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(GetMsg:n64SvrID:), (IMP)&_logos_method$_ungrouped$CMessageMgr$GetMsg$n64SvrID$, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$GetMsg$n64SvrID$);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(GetMsg:LocalID:), (IMP)&_logos_method$_ungrouped$CMessageMgr$GetMsg$LocalID$, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$GetMsg$LocalID$);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(QueryMsgFromChat:queryText:FromID:FromCreateTime:Limit:LeftCount:), (IMP)&_logos_method$_ungrouped$CMessageMgr$QueryMsgFromChat$queryText$FromID$FromCreateTime$Limit$LeftCount$, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$QueryMsgFromChat$queryText$FromID$FromCreateTime$Limit$LeftCount$);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(GetDownMsgByCreateTime:FromID:FromCreateTime:Limit:LeftCount:), (IMP)&_logos_method$_ungrouped$CMessageMgr$GetDownMsgByCreateTime$FromID$FromCreateTime$Limit$LeftCount$, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$GetDownMsgByCreateTime$FromID$FromCreateTime$Limit$LeftCount$);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(GetMsgByCreateTime:FromID:FromCreateTime:Limit:LeftCount:), (IMP)&_logos_method$_ungrouped$CMessageMgr$GetMsgByCreateTime$FromID$FromCreateTime$Limit$LeftCount$, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$GetMsgByCreateTime$FromID$FromCreateTime$Limit$LeftCount$);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(GetDownMsg:FromID:Limit:LeftCount:LeftUnreadCount:), (IMP)&_logos_method$_ungrouped$CMessageMgr$GetDownMsg$FromID$Limit$LeftCount$LeftUnreadCount$, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$GetDownMsg$FromID$Limit$LeftCount$LeftUnreadCount$);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(GetMsg:FromID:Limit:LeftCount:LeftUnreadCount:), (IMP)&_logos_method$_ungrouped$CMessageMgr$GetMsg$FromID$Limit$LeftCount$LeftUnreadCount$, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$GetMsg$FromID$Limit$LeftCount$LeftUnreadCount$);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(AddMsgPattern:), (IMP)&_logos_method$_ungrouped$CMessageMgr$AddMsgPattern$, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$AddMsgPattern$);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(HandleMsgList:MsgList:), (IMP)&_logos_method$_ungrouped$CMessageMgr$HandleMsgList$MsgList$, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$HandleMsgList$MsgList$);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(ResendMsg:MsgWrap:), (IMP)&_logos_method$_ungrouped$CMessageMgr$ResendMsg$MsgWrap$, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$ResendMsg$MsgWrap$);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(ModMsgByBitSet:MsgWrap:BitSet:), (IMP)&_logos_method$_ungrouped$CMessageMgr$ModMsgByBitSet$MsgWrap$BitSet$, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$ModMsgByBitSet$MsgWrap$BitSet$);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(ModMsgWithoutNotify:MsgWrap:), (IMP)&_logos_method$_ungrouped$CMessageMgr$ModMsgWithoutNotify$MsgWrap$, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$ModMsgWithoutNotify$MsgWrap$);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(ModMsg:MsgWrap:), (IMP)&_logos_method$_ungrouped$CMessageMgr$ModMsg$MsgWrap$, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$ModMsg$MsgWrap$);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(AddMsg:MsgWrap:), (IMP)&_logos_method$_ungrouped$CMessageMgr$AddMsg$MsgWrap$, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$AddMsg$MsgWrap$);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(onRevokeMsg:), (IMP)&_logos_method$_ungrouped$CMessageMgr$onRevokeMsg$, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$onRevokeMsg$);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(onRevokeMsgCgiReturn:), (IMP)&_logos_method$_ungrouped$CMessageMgr$onRevokeMsgCgiReturn$, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$onRevokeMsgCgiReturn$);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(RevokeMsg:MsgWrap:Counter:), (IMP)&_logos_method$_ungrouped$CMessageMgr$RevokeMsg$MsgWrap$Counter$, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$RevokeMsg$MsgWrap$Counter$);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(AsyncOnCheckQQ), (IMP)&_logos_method$_ungrouped$CMessageMgr$AsyncOnCheckQQ, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$AsyncOnCheckQQ);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(AsyncOnModMsg:MsgWrap:), (IMP)&_logos_method$_ungrouped$CMessageMgr$AsyncOnModMsg$MsgWrap$, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$AsyncOnModMsg$MsgWrap$);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(IsVideoMsgdDownloadIng:), (IMP)&_logos_method$_ungrouped$CMessageMgr$IsVideoMsgdDownloadIng$, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$IsVideoMsgdDownloadIng$);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(IsVideoMsgUploadIng:), (IMP)&_logos_method$_ungrouped$CMessageMgr$IsVideoMsgUploadIng$, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$IsVideoMsgUploadIng$);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(InitMsgMgr:Lock:), (IMP)&_logos_method$_ungrouped$CMessageMgr$InitMsgMgr$Lock$, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$InitMsgMgr$Lock$);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(SaveMesVoice:MsgWrap:), (IMP)&_logos_method$_ungrouped$CMessageMgr$SaveMesVoice$MsgWrap$, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$SaveMesVoice$MsgWrap$);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(SaveMsgThumb:MsgWrap:), (IMP)&_logos_method$_ungrouped$CMessageMgr$SaveMsgThumb$MsgWrap$, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$SaveMsgThumb$MsgWrap$);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(SaveMesImg:MsgWrap:), (IMP)&_logos_method$_ungrouped$CMessageMgr$SaveMesImg$MsgWrap$, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$SaveMesImg$MsgWrap$);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, sel_registerName("dealloc"), (IMP)&_logos_method$_ungrouped$CMessageMgr$dealloc, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$dealloc);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(init), (IMP)&_logos_method$_ungrouped$CMessageMgr$init, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$init);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(MainThreadNotifyToExt:), (IMP)&_logos_method$_ungrouped$CMessageMgr$MainThreadNotifyToExt$, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$MainThreadNotifyToExt$);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(AsyncOnPushMsg:), (IMP)&_logos_method$_ungrouped$CMessageMgr$AsyncOnPushMsg$, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$AsyncOnPushMsg$);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(AsyncOnDelMsg:MsgWrap:), (IMP)&_logos_method$_ungrouped$CMessageMgr$AsyncOnDelMsg$MsgWrap$, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$AsyncOnDelMsg$MsgWrap$);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(AsyncOnSendVoiceError:MsgWrap:ErroNO:), (IMP)&_logos_method$_ungrouped$CMessageMgr$AsyncOnSendVoiceError$MsgWrap$ErroNO$, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$AsyncOnSendVoiceError$MsgWrap$ErroNO$);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(AsyncOnUnReadChange:), (IMP)&_logos_method$_ungrouped$CMessageMgr$AsyncOnUnReadChange$, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$AsyncOnUnReadChange$);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(AsyncOnDelMsg:DelAll:), (IMP)&_logos_method$_ungrouped$CMessageMgr$AsyncOnDelMsg$DelAll$, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$AsyncOnDelMsg$DelAll$);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(AsyncOnDelMsg:), (IMP)&_logos_method$_ungrouped$CMessageMgr$AsyncOnDelMsg$, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$AsyncOnDelMsg$);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(AsyncOnMsgNotAddDBSession:MsgList:), (IMP)&_logos_method$_ungrouped$CMessageMgr$AsyncOnMsgNotAddDBSession$MsgList$, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$AsyncOnMsgNotAddDBSession$MsgList$);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(AsyncOnSpecialSession:MsgList:), (IMP)&_logos_method$_ungrouped$CMessageMgr$AsyncOnSpecialSession$MsgList$, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$AsyncOnSpecialSession$MsgList$);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(AsyncOnNotAddDBMessage:MsgWrap:), (IMP)&_logos_method$_ungrouped$CMessageMgr$AsyncOnNotAddDBMessage$MsgWrap$, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$AsyncOnNotAddDBMessage$MsgWrap$);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(AsyncOnAddMsgForSession:MsgWrap:NewMsgArriveNotify:), (IMP)&_logos_method$_ungrouped$CMessageMgr$AsyncOnAddMsgForSession$MsgWrap$NewMsgArriveNotify$, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$AsyncOnAddMsgForSession$MsgWrap$NewMsgArriveNotify$);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(AsyncOnAddMsgForSession:MsgWrap:), (IMP)&_logos_method$_ungrouped$CMessageMgr$AsyncOnAddMsgForSession$MsgWrap$, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$AsyncOnAddMsgForSession$MsgWrap$);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(AsyncOnAddMsgListForSession:NotifyUsrName:), (IMP)&_logos_method$_ungrouped$CMessageMgr$AsyncOnAddMsgListForSession$NotifyUsrName$, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$AsyncOnAddMsgListForSession$NotifyUsrName$);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(AsyncOnPreAddMsg:MsgWrap:), (IMP)&_logos_method$_ungrouped$CMessageMgr$AsyncOnPreAddMsg$MsgWrap$, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$AsyncOnPreAddMsg$MsgWrap$);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(UpdateVideoStatus:), (IMP)&_logos_method$_ungrouped$CMessageMgr$UpdateVideoStatus$, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$UpdateVideoStatus$);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(IsRecordMsgUploading:), (IMP)&_logos_method$_ungrouped$CMessageMgr$IsRecordMsgUploading$, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$IsRecordMsgUploading$);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(IsImageMsgUploadIng:), (IMP)&_logos_method$_ungrouped$CMessageMgr$IsImageMsgUploadIng$, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$IsImageMsgUploadIng$);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(escapeKeywordForQueryString:), (IMP)&_logos_method$_ungrouped$CMessageMgr$escapeKeywordForQueryString$, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$escapeKeywordForQueryString$);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(isContact:ConfirmToQueryString:), (IMP)&_logos_method$_ungrouped$CMessageMgr$isContact$ConfirmToQueryString$, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$isContact$ConfirmToQueryString$);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(BackGroundAddHelloMsg:), (IMP)&_logos_method$_ungrouped$CMessageMgr$BackGroundAddHelloMsg$, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$BackGroundAddHelloMsg$);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}if (_logos_class$_ungrouped$CMessageMgr) {MSHookMessageEx(_logos_class$_ungrouped$CMessageMgr, @selector(AsyncOnAddMsg:MsgWrap:), (IMP)&_logos_method$_ungrouped$CMessageMgr$AsyncOnAddMsg$MsgWrap$, (IMP*)&_logos_orig$_ungrouped$CMessageMgr$AsyncOnAddMsg$MsgWrap$);} else {HBLogError(@"logos: nil class %s", "CMessageMgr");}{ char _typeEncoding[1024]; unsigned int i = 0; _typeEncoding[i] = 'v'; i += 1; _typeEncoding[i] = '@'; i += 1; _typeEncoding[i] = ':'; i += 1; memcpy(_typeEncoding + i, @encode(NSString*), strlen(@encode(NSString*))); i += strlen(@encode(NSString*)); memcpy(_typeEncoding + i, @encode(NSString*), strlen(@encode(NSString*))); i += strlen(@encode(NSString*)); _typeEncoding[i] = '\0'; class_addMethod(_logos_class$_ungrouped$CMessageMgr, @selector(sendTextMsgToUsr:text:), (IMP)&_logos_method$_ungrouped$CMessageMgr$sendTextMsgToUsr$text$, _typeEncoding); }}
    }
    
}


